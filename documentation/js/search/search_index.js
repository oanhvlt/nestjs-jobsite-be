var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.207,1,3.049]],["body/controllers/AppController.html",[0,2.034,1,5.139,2,1.667,3,0.157,4,0.157,5,0.105,6,5.038,7,0.339,8,0.012,9,2.775,10,5.038,11,4.211,12,4.565,13,0.928,14,4.865,15,5.038,16,4.6,17,3.317,18,4.369,19,5.756,20,0.157,21,0.28,22,2.302,23,3.38,24,2.91,25,0.01,26,0.01]],["title/modules/AppModule.html",[27,1.037,28,3.049]],["body/modules/AppModule.html",[1,4.191,2,1.403,3,0.09,4,0.09,5,0.061,7,0.356,8,0.012,13,0.535,14,4.495,15,2.901,16,3.476,17,1.91,20,0.09,21,0.161,25,0.007,26,0.007,27,1.425,28,6.234,29,1.373,30,1.424,31,1.536,32,1.536,33,1.424,34,2.654,35,1.536,36,2.901,37,2.901,38,2.901,39,4.78,40,4.78,41,4.78,42,4.78,43,4.78,44,4.78,45,4.78,46,4.78,47,4.78,48,4.495,49,4.78,50,4.495,51,2.245,52,1.536,53,1.536,54,3.314,55,2.654,56,3.314,57,1.739,58,0.96,59,4.241,60,3.314,61,3.314,62,3.314,63,1.665,64,1.197,65,1.665,66,0.876,67,3.314,68,3.314,69,3.314,70,3.314,71,3.314,72,3.314,73,3.314,74,3.314,75,3.314,76,3.314,77,2.628,78,3.314,79,2.628,80,3.314,81,3.314,82,5.728,83,0.436,84,3.314,85,3.314,86,3.314,87,3.314,88,3.314,89,2.901,90,3.314,91,3.314,92,3.314,93,3.314,94,2.011,95,3.314,96,1.424,97,2.793,98,3.314,99,3.314,100,3.314,101,3.314,102,3.314,103,2.628,104,1.238,105,3.314,106,3.314,107,3.314,108,3.314,109,3.314,110,0.876,111,2.628,112,3.314,113,3.314,114,1.326]],["title/injectables/AppService.html",[14,2.675,115,0.864]],["body/injectables/AppService.html",[3,0.162,4,0.162,5,0.109,7,0.255,8,0.012,13,0.96,14,4.6,20,0.162,21,0.29,25,0.01,26,0.01,83,0.943,110,1.573,115,1.486,116,2.223,117,5.208,118,0.651,119,2.013,120,7.982,121,0.811,122,5.95,123,1.671,124,5.95,125,5.208,126,5.95,127,5.95,128,5.95,129,5.95,130,5.95]],["title/controllers/AuthController.html",[0,1.207,131,3.049]],["body/controllers/AuthController.html",[0,0.901,2,0.901,3,0.085,4,0.085,5,0.057,7,0.325,8,0.012,9,1.5,10,2.724,11,5.009,12,2.468,13,0.502,18,3.182,20,0.085,21,0.152,22,1.245,23,2.063,25,0.006,26,0.006,79,2.468,83,0.41,89,2.724,104,2.062,110,1.809,114,2.208,118,0.341,119,1.299,121,0.891,123,1.835,131,3.385,132,2.724,133,1.5,134,4.049,135,4.626,136,4.626,137,4.626,138,4.626,139,4.626,140,3.112,141,2.561,142,1.53,143,4.832,144,2.481,145,3.112,146,3.112,147,2.012,148,0.83,149,0.87,150,1.892,151,1.388,152,3.112,153,6.881,154,4.861,155,3.112,156,3.112,157,3.112,158,3.112,159,3.112,160,4.832,161,3.112,162,4.626,163,3.112,164,3.112,165,3.112,166,3.112,167,4.832,168,3.112,169,3.112,170,3.112,171,3.592,172,3.112,173,1.47,174,3.112,175,3.112,176,1.633,177,2.468,178,2.277,179,3.112,180,3.587,181,1.5,182,1.337,183,2.807,184,1.889,185,2.124,186,1.889,187,1.337,188,2.54,189,2.468,190,3.112,191,3.112,192,4.626,193,1.633,194,1.337,195,3.112,196,3.112,197,3.112,198,3.112,199,4.832,200,4.049,201,3.112,202,3.112,203,2.724,204,3.112,205,2.277,206,3.112,207,2.277,208,2.724,209,3.112,210,3.112,211,3.112,212,3.112,213,3.112,214,3.112,215,5.521,216,3.112,217,2.468,218,4.626,219,3.112,220,2.277,221,3.112,222,3.112,223,3.112,224,3.112,225,3.112,226,1.633,227,3.112,228,3.112,229,3.112,230,3.112,231,3.112,232,3.112,233,2.468,234,1.47,235,2.468,236,1.289,237,3.112,238,3.112,239,3.112,240,3.112,241,3.112,242,2.277,243,3.112,244,3.112,245,3.112,246,3.112,247,3.112]],["title/modules/AuthModule.html",[27,1.037,39,2.845]],["body/modules/AuthModule.html",[2,1.671,3,0.116,4,0.116,5,0.078,7,0.351,8,0.012,13,0.684,16,4.269,17,2.446,18,4.747,20,0.157,21,0.207,25,0.008,26,0.008,27,1.631,29,1.758,30,1.823,31,1.966,32,1.966,33,1.823,34,3.037,35,3.037,39,5.721,48,4.87,50,4.87,51,2.673,52,1.966,53,1.966,55,3.037,59,5.049,103,3.365,104,1.585,111,3.365,131,4.796,177,3.365,248,3.714,249,3.714,250,4.243,251,3.714,252,5.18,253,5.18,254,4.243,255,4.243,256,5.769,257,2.724,258,4.243,259,4.243,260,3.365,261,4.243,262,4.575,263,4.243,264,4.243,265,3.105,266,4.243,267,4.243,268,4.243,269,3.714,270,3.714,271,4.243,272,3.714,273,4.243,274,3.714]],["title/injectables/AuthService.html",[18,2.402,115,0.864]],["body/injectables/AuthService.html",[3,0.065,4,0.065,5,0.043,7,0.295,8,0.012,13,0.383,16,3.906,17,1.367,18,2.165,20,0.065,21,0.116,22,1.502,23,2.364,25,0.005,26,0.005,83,0.945,104,2.683,110,1.701,114,1.502,115,0.779,116,0.886,118,0.26,119,1.055,121,0.878,123,1.309,141,2.087,144,2.339,147,1.633,148,0.928,149,0.673,150,1.535,151,2.079,153,5.056,154,3.944,167,5.056,171,2.782,173,1.194,184,1.44,185,1.62,186,1.44,187,1.019,188,2.911,189,1.882,199,6.015,200,5.056,217,2.979,234,2.413,235,2.979,236,2.765,242,1.736,260,1.882,262,2.979,269,3.287,272,2.077,274,2.077,275,2.077,276,0.963,277,4.662,278,4.662,279,4.662,280,3.756,281,2.373,282,3.374,283,6.436,284,4.08,285,2.373,286,3.756,287,2.373,288,3.287,289,2.373,290,2.077,291,4.64,292,3.756,293,4.08,294,2.373,295,1.44,296,2.992,297,2.829,298,2.373,299,2.373,300,2.373,301,1.367,302,1.882,303,2.373,304,3.756,305,2.373,306,2.373,307,1.44,308,1.099,309,2.748,310,3.756,311,1.918,312,3.756,313,3.756,314,2.373,315,2.664,316,3.287,317,4.08,318,1.624,319,2.404,320,4.08,321,3.756,322,3.756,323,3.756,324,6.872,325,4.662,326,2.12,327,3.756,328,3.756,329,4.64,330,2.373,331,3.287,332,3.756,333,3.756,334,3.756,335,4.662,336,3.756,337,4.662,338,2.373,339,2.373,340,2.077,341,1.019,342,2.373,343,3.756,344,2.373,345,2.373,346,2.373,347,2.373,348,2.373,349,2.373,350,2.373,351,3.756,352,2.165,353,3.756,354,1.675,355,3.287,356,2.165,357,3.756,358,3.756,359,2.373,360,2.077,361,2.373,362,1.367,363,2.373,364,1.882,365,1.451,366,3.756,367,2.373]],["title/controllers/CompaniesController.html",[0,1.207,368,3.049]],["body/controllers/CompaniesController.html",[0,1.025,2,1.025,3,0.138,4,0.096,5,0.065,7,0.317,8,0.012,9,2.866,13,0.571,20,0.096,21,0.172,24,1.466,25,0.007,26,0.007,64,1.278,83,1.092,96,2.791,110,1.818,118,0.387,119,1.427,121,0.938,123,1.932,133,1.706,141,2.819,142,1.611,144,2.555,147,2.119,148,0.874,149,0.874,150,1.992,176,2.666,180,3.265,181,1.706,182,1.52,187,1.52,193,1.857,194,1.52,326,2.378,365,1.963,368,3.717,369,3.097,370,3.097,371,1.12,372,2.032,373,2.032,374,3.097,375,4.597,376,3.538,377,1.578,378,2.897,379,3.097,380,5.081,381,1.72,382,4.029,383,3.538,384,2.265,385,1.415,386,3.538,387,3.538,388,2.206,389,1.706,390,2.928,391,3.538,392,2.039,393,5.153,394,3.261,395,3.538,396,1.857,397,1.943,398,2.183,399,3.815,400,3.097,401,1.367,402,4.029,403,1.367,404,3.538,405,3.538,406,1.639,407,2.147,408,3.538,409,3.538,410,3.538,411,3.538,412,3.538,413,2.147,414,2.271,415,2.271,416,3.538,417,2.039,418,2.039,419,3.538,420,3.538,421,3.538,422,2.039,423,3.538]],["title/modules/CompaniesModule.html",[27,1.037,40,2.845]],["body/modules/CompaniesModule.html",[2,1.906,3,0.141,4,0.141,5,0.095,7,0.337,8,0.012,13,0.836,20,0.141,21,0.253,25,0.009,26,0.009,27,1.799,29,2.149,30,2.228,31,2.403,32,2.403,33,2.228,34,3.351,35,3.351,40,5.563,51,3.05,52,2.403,53,2.403,55,2.403,57,2.721,58,1.502,148,0.659,368,5.291,381,1.756,399,5.447,400,4.539,424,4.539,425,4.539,426,4.539,427,5.186,428,5.186,429,4.816,430,4.539,431,2.848,432,4.539,433,2.149]],["title/injectables/CompaniesService.html",[115,0.864,399,2.675]],["body/injectables/CompaniesService.html",[3,0.095,4,0.095,5,0.064,7,0.334,8,0.012,13,0.562,20,0.095,21,0.17,22,2.011,23,1.555,25,0.007,26,0.007,58,1.01,63,1.752,64,2.13,65,1.752,66,1.558,83,1.024,96,3.062,97,2.01,104,2.744,110,0.922,115,1.043,116,1.303,118,0.382,119,1.412,121,0.972,123,1.921,141,2.717,144,2.263,147,2.195,148,0.905,149,0.905,150,2.064,151,2.629,187,1.498,226,1.83,234,1.874,236,1.445,265,2.551,301,2.01,311,0.95,318,0.922,326,2.011,364,2.765,365,1.943,371,1.108,372,2.358,373,2.011,374,4.401,375,4.575,377,2.242,378,2.629,381,1.181,384,2.242,385,1.395,388,1.816,389,1.681,392,2.01,393,4.67,398,2.16,399,3.227,401,1.347,402,3.987,403,1.347,430,3.052,434,3.052,435,3.487,436,3.544,437,3.487,438,5.028,439,3.487,440,2.662,441,3.487,442,3.487,443,3.487,444,3.487,445,1.915,446,2.765,447,2.116,448,2.898,449,3.487,450,2.765,451,2.765,452,3.487,453,1.498,454,3.052,455,2.116,456,2.116,457,2.238,458,2.116,459,2.116,460,3.052,461,2.116,462,2.116,463,3.051,464,1.555,465,3.051,466,3.051,467,3.487,468,2.116,469,2.116,470,2.116]],["title/classes/Company.html",[21,0.203,381,1.411]],["body/classes/Company.html",[3,0.11,4,0.11,5,0.074,7,0.239,8,0.012,20,0.174,21,0.196,25,0.008,26,0.008,58,1.165,66,1.47,83,1.066,114,2.887,118,0.44,121,1.079,142,1.854,148,0.81,149,1.062,234,1.278,276,1.426,311,1.737,318,1.685,341,2.739,381,1.883,429,2.943,433,2.304,446,3.19,453,2.739,471,0.914,472,2.943,473,3.345,474,3.674,475,2.641,476,4.092,477,3.074,478,2.842,479,4.411,480,4.023,481,3.187,482,5.022,483,4.023,484,3.674,485,3.869,486,3.459,487,4.023,488,4.023,489,4.023,490,4.023,491,4.023,492,4.023,493,4.023,494,2.442,495,3.206,496,2.442,497,4.411,498,2.381,499,3.521]],["title/classes/Company-1.html",[21,0.169,381,1.177,464,1.55]],["body/classes/Company-1.html",[3,0.098,4,0.098,5,0.066,7,0.257,8,0.012,20,0.098,21,0.337,25,0.007,26,0.007,66,1.357,83,1.03,94,3.97,114,1.436,118,0.393,121,0.817,142,1.404,148,0.879,149,0.879,173,1.632,276,1.317,297,3.116,311,1.633,354,3.49,356,2.069,371,0.791,381,2.343,440,1.918,464,2.289,471,0.816,475,2.127,476,3.847,481,3.031,486,2.379,498,1.918,500,5.187,501,2.627,502,3.309,503,3.591,504,3.591,505,3.591,506,5.246,507,1.884,508,3.116,509,3.757,510,5.246,511,3.296,512,3.296,513,3.296,514,2.82,515,1.387,516,2.959,517,2.179,518,3.057,519,4.267,520,4.298,521,3.77,522,2.305,523,3.143,524,3.143,525,3.143,526,4.198,527,3.757,528,4.072,529,4.072,530,3.757,531,4.753,532,4.494,533,4.753,534,3.637,535,3.505]],["title/classes/Company-2.html",[21,0.169,381,1.177,536,3.042]],["body/classes/Company-2.html",[3,0.092,4,0.092,5,0.062,7,0.273,8,0.012,20,0.158,21,0.354,24,2.036,25,0.007,26,0.007,66,1.298,83,1.06,94,3.514,118,0.37,121,0.67,142,1.151,148,0.924,149,0.808,171,1.772,183,2.05,184,3.514,194,1.451,276,1.26,295,2.982,311,1.577,318,1.863,319,2.163,354,3.615,356,1.947,371,0.745,381,2.287,388,1.04,440,2.163,464,2.191,471,0.767,473,3.336,475,2.036,486,2.276,498,2.163,502,3.326,507,1.772,511,3.154,512,3.154,513,3.717,514,2.698,515,1.305,516,2.832,518,3.064,519,4.224,520,4.385,522,2.168,526,3.717,537,2.168,538,3.378,539,3.378,540,4.237,541,3.337,542,2.982,543,2.471,544,3.595,545,1.855,546,3.595,547,3.871,548,4.1,549,3.859,550,2.168,551,3.595,552,2.471,553,2.471]],["title/classes/CreateCompanyDto.html",[21,0.203,375,2.675]],["body/classes/CreateCompanyDto.html",[3,0.129,4,0.129,5,0.086,7,0.202,8,0.012,20,0.129,21,0.302,25,0.008,26,0.008,83,1.065,118,0.516,121,1.001,142,1.719,148,0.968,149,0.932,276,1.588,354,3.607,375,3.975,471,1.072,473,3.999,475,3.158,476,4.892,502,3.049,515,1.823,518,2.742,519,4.244,520,4.442,554,6.671,555,3.742,556,3.688,557,4.718,558,4.718,559,4.718,560,4.718]],["title/classes/CreateFileDto.html",[21,0.203,561,2.675]],["body/classes/CreateFileDto.html",[3,0.178,4,0.178,5,0.12,8,0.011,20,0.178,21,0.318,25,0.01,26,0.01,471,1.484,561,4.86,562,5.717,563,5.18]],["title/classes/CreateJobDto.html",[21,0.203,517,2.529]],["body/classes/CreateJobDto.html",[3,0.074,4,0.074,5,0.05,7,0.219,8,0.012,20,0.074,21,0.301,25,0.006,26,0.006,66,1.109,83,1.019,94,4.248,114,1.678,118,0.299,121,1.016,142,1.745,148,0.828,149,0.973,173,1.333,276,1.076,297,2.546,311,0.745,354,3.603,356,2.418,371,0.603,381,2.297,440,2.138,464,1.871,471,0.621,475,2.558,476,1.755,481,3.243,486,1.944,498,1.021,500,5.997,501,2.001,502,3.095,506,4.467,507,1.435,508,2.546,509,3.069,510,4.467,511,2.693,512,2.693,513,2.693,514,2.304,515,1.056,516,2.418,517,2.546,518,2.943,519,4.369,520,4.326,521,4.137,522,2.693,523,3.672,524,2.393,525,2.393,526,4.493,527,4.518,528,4.897,529,4.897,530,4.518,531,5.38,532,3.672,533,5.38,534,4.117,535,3.908,556,3.682,564,2.393,565,2.734,566,2.734,567,4.195,568,4.195,569,2.734,570,2.734,571,2.734,572,2.734,573,2.734,574,2.734,575,2.734,576,2.734,577,2.734,578,2.734,579,2.734,580,2.734]],["title/classes/CreateMailDto.html",[21,0.203,581,2.675]],["body/classes/CreateMailDto.html",[3,0.178,4,0.178,5,0.12,8,0.011,20,0.178,21,0.318,25,0.01,26,0.01,471,1.484,581,4.86,582,5.717,583,5.18]],["title/classes/CreatePermissionDto.html",[21,0.203,584,2.675]],["body/classes/CreatePermissionDto.html",[3,0.129,4,0.129,5,0.086,7,0.202,8,0.012,20,0.129,21,0.302,25,0.008,26,0.008,27,1.72,83,1.065,118,0.516,121,1.001,142,1.719,148,0.968,149,0.932,276,1.588,354,3.607,471,1.072,473,3.25,475,2.566,476,3.975,502,3.049,515,1.823,518,2.742,519,4.244,520,4.442,556,3.688,584,3.975,585,6.671,586,3.742,587,4.719,588,5.058,589,4.718,590,4.718,591,4.718,592,4.718]],["title/classes/CreateResumeDto.html",[21,0.203,593,2.289]],["body/classes/CreateResumeDto.html",[3,0.109,4,0.109,5,0.073,7,0.238,8,0.012,20,0.151,21,0.31,25,0.008,26,0.008,66,1.464,83,1.006,118,0.437,121,1.016,142,1.745,149,0.947,276,1.42,318,1.904,362,4.701,381,2.439,388,2.295,471,0.908,498,2.909,502,3.202,515,1.545,518,3.047,542,4.371,550,4.783,556,3.744,593,3.041,594,6.059,595,2.566,596,5.019,597,5.019,598,3.779,599,6.059,600,5.59,601,6.354,602,3.998,603,3.998,604,3.337,605,3.998,606,3.998,607,3.499,608,3.998,609,2.566]],["title/classes/CreateRoleDto.html",[21,0.203,610,2.675]],["body/classes/CreateRoleDto.html",[3,0.13,4,0.13,5,0.087,7,0.267,8,0.012,20,0.13,21,0.304,25,0.008,26,0.008,66,1.647,83,1.033,118,0.521,121,1.004,142,1.725,148,0.971,149,0.936,276,1.598,315,4.016,362,4.671,471,1.083,475,3.168,498,2.328,502,3.058,508,3.783,509,4.56,515,1.841,518,2.93,534,4.85,535,3.253,542,2.892,556,3.132,610,4.001,611,6.692,612,3.779,613,4.765,614,4.765,615,4.765,616,4.765,617,4.765,618,4.17,619,4.17,620,4.765,621,2.892]],["title/classes/CreateSubscriberDto.html",[21,0.203,622,2.675]],["body/classes/CreateSubscriberDto.html",[3,0.137,4,0.137,5,0.092,7,0.216,8,0.012,20,0.137,21,0.314,25,0.009,26,0.009,83,1.047,118,0.55,121,0.971,142,1.669,148,0.988,149,0.905,276,1.654,315,3.778,318,1.883,362,4.663,471,1.142,475,3.115,502,3.007,508,3.915,509,3.676,515,1.941,518,2.972,521,4.106,541,4.106,556,2.525,618,4.397,619,4.397,621,3.049,622,4.14,623,6.58,624,3.985,625,5.024,626,5.024,627,5.024,628,5.024]],["title/classes/CreateUserCvDto.html",[21,0.203,609,2.675]],["body/classes/CreateUserCvDto.html",[3,0.121,4,0.121,5,0.081,7,0.255,8,0.012,20,0.162,21,0.327,25,0.008,26,0.008,66,1.571,83,0.983,118,0.486,121,0.914,142,1.57,149,0.852,276,1.525,318,1.571,362,4.781,381,2.425,388,2.065,471,1.008,498,2.933,502,3.266,515,1.715,518,3.099,542,4.533,550,4.304,556,3.37,593,2.437,594,5.681,595,2.848,596,5.241,597,5.241,598,3.12,599,6.227,600,4.906,604,3.319,609,3.816,629,4.437,630,4.437,631,4.437]],["title/classes/CreateUserDto.html",[21,0.203,545,2.289]],["body/classes/CreateUserDto.html",[3,0.076,4,0.076,5,0.051,7,0.249,8,0.012,20,0.141,21,0.333,24,1.771,25,0.006,26,0.006,66,1.129,83,1.056,94,3.788,118,0.307,121,0.962,142,1.652,148,0.896,149,0.937,171,1.47,183,1.7,184,4.387,194,1.204,276,1.096,295,2.594,311,0.763,318,1.949,319,2.556,354,3.664,356,2.463,371,0.618,381,2.317,388,1.316,440,2.165,464,1.906,471,0.637,473,3.59,475,1.771,486,1.98,498,1.935,502,3.208,507,1.47,511,2.743,512,2.743,513,3.326,514,2.347,515,1.082,516,2.463,518,3.013,519,4.294,520,4.43,522,2.743,526,3.721,537,1.798,540,3.791,541,3.341,542,2.594,543,2.05,544,3.791,545,2.347,546,3.791,547,3.97,548,4.387,549,4.153,550,2.743,551,3.127,552,2.05,553,2.05,556,3.137,564,2.452,632,2.801,633,2.801,634,2.801,635,2.801,636,2.452,637,2.801,638,2.801,639,2.801,640,2.801,641,2.801,642,2.801]],["title/controllers/DatabasesController.html",[0,1.207,643,3.049]],["body/controllers/DatabasesController.html",[0,1.783,2,1.783,3,0.168,4,0.168,5,0.113,7,0.314,8,0.012,13,0.993,20,0.168,21,0.3,24,2.552,25,0.01,26,0.01,133,2.969,406,2.853,643,5.352,644,5.39,645,6.158,646,5.009,647,5.39,648,6.158]],["title/modules/DatabasesModule.html",[27,1.037,41,2.845]],["body/modules/DatabasesModule.html",[2,1.819,3,0.131,4,0.131,5,0.088,7,0.349,8,0.012,13,0.778,20,0.131,21,0.235,25,0.009,26,0.009,27,1.738,29,1.999,30,2.073,31,2.235,32,2.235,33,2.073,34,3.238,35,2.235,41,5.548,51,2.911,52,2.235,53,2.235,55,2.235,57,2.531,58,1.397,144,1.486,148,0.888,282,4.322,302,3.826,308,2.235,319,1.802,431,2.649,433,2.895,643,5.113,646,5.052,647,4.222,649,4.222,650,4.222,651,4.824,652,4.824,653,4.289,654,4.222,655,4.289,656,3.826,657,4.033,658,3.293,659,4.222,660,3.826,661,3.53]],["title/injectables/DatabasesService.html",[115,0.864,646,2.675]],["body/injectables/DatabasesService.html",[3,0.085,4,0.085,5,0.057,7,0.319,8,0.012,13,0.502,16,4.302,17,1.794,20,0.085,21,0.152,22,1.85,23,3.247,24,2.288,25,0.006,26,0.006,58,0.901,63,1.564,64,1.124,65,1.564,66,0.822,104,2.062,114,1.85,115,0.959,116,1.162,118,0.341,119,1.299,121,0.753,123,0.874,144,1.425,147,0.959,148,0.925,149,0.395,150,0.901,173,1.47,220,2.277,234,2.253,236,3.083,276,1.186,282,3.357,296,1.997,297,1.889,302,2.468,308,1.442,309,2.277,315,3.283,318,1.459,319,2.557,331,2.724,354,1.388,371,1.217,436,4.159,445,1.709,473,2.897,475,1.917,534,2.807,547,3.032,548,3.351,549,3.351,646,2.969,654,2.724,656,2.468,658,2.124,662,2.724,663,6.112,664,6.846,665,2.724,666,4.832,667,4.378,668,5.521,669,4.626,670,4.049,671,3.112,672,4.626,673,2.277,674,2.124,675,2.277,676,4.04,677,2.468,678,4.04,679,4.626,680,2.277,681,3.112,682,2.724,683,2.468,684,3.112,685,3.112,686,3.112,687,5.521,688,3.112,689,5.521,690,3.112,691,5.521,692,3.112,693,5.009,694,3.112,695,3.112,696,3.112,697,3.112,698,4.626,699,2.724,700,3.112,701,4.049,702,2.724,703,3.112,704,3.112,705,3.112,706,3.112,707,3.112,708,3.112,709,3.112,710,3.112,711,3.112,712,3.112,713,3.668,714,3.112,715,5.521,716,3.112,717,5.521,718,4.626,719,5.521,720,5.521,721,4.626,722,3.112,723,3.112,724,2.724,725,3.112,726,3.112,727,3.112,728,2.724,729,3.112,730,2.124,731,3.112,732,2.124]],["title/classes/File.html",[5,0.076,21,0.203]],["body/classes/File.html",[3,0.179,4,0.179,5,0.147,8,0.011,20,0.179,21,0.319,25,0.01,26,0.01,471,1.489,733,5.736]],["title/controllers/FilesController.html",[0,1.207,734,3.049]],["body/controllers/FilesController.html",[0,0.976,2,0.976,3,0.092,4,0.092,5,0.124,7,0.312,8,0.012,9,1.626,13,0.544,20,0.092,21,0.164,24,1.397,25,0.007,26,0.007,64,1.218,83,1,110,1.784,118,0.369,119,1.378,121,0.961,123,1.979,133,1.626,142,1.65,147,2.079,148,0.858,149,0.858,150,1.955,173,1.559,176,2.575,180,3.177,181,1.626,182,1.449,186,2.046,193,1.769,194,1.449,326,1.963,365,1.896,372,2.541,373,1.963,385,1.349,388,2.17,389,1.626,390,2.828,392,1.943,394,3.15,396,1.769,397,1.852,401,1.303,403,1.303,406,1.562,417,2.828,418,1.943,422,1.943,561,2.164,621,3.511,734,3.59,735,2.951,736,4.588,737,4.907,738,4.907,739,3.372,740,3.372,741,3.372,742,5.086,743,3.372,744,3.372,745,5.785,746,3.372,747,4.295,748,4.907,749,3.372,750,4.295,751,3.372,752,3.372,753,4.907,754,3.372,755,2.951,756,3.372,757,3.372,758,5.785,759,3.372,760,3.372,761,3.713,762,2.951,763,3.891,764,3.372,765,3.372,766,2.467,767,3.372,768,3.372,769,3.372,770,4.907,771,3.372,772,3.372,773,4.907,774,4.907,775,4.907,776,4.907,777,4.907,778,4.907,779,3.372,780,4.907,781,3.372,782,4.907,783,4.907,784,4.295,785,4.907,786,4.907,787,3.372,788,3.372,789,3.372,790,3.372,791,3.372,792,3.372,793,3.372,794,3.372,795,3.372,796,3.372,797,2.467,798,3.372,799,3.372]],["title/modules/FilesModule.html",[27,1.037,42,2.845]],["body/modules/FilesModule.html",[2,1.949,3,0.146,4,0.146,5,0.098,7,0.34,8,0.012,13,0.867,20,0.146,21,0.262,25,0.009,26,0.009,27,1.828,29,2.226,30,2.308,31,2.489,32,2.489,33,2.308,34,3.406,35,2.489,42,5.526,51,3.119,52,2.489,53,2.489,55,2.489,186,3.261,734,5.378,761,5.196,762,4.702,766,3.931,800,4.702,801,4.702,802,5.373,803,5.373,804,5.373,805,4.925,806,5.373,807,5.373,808,5.373]],["title/injectables/FilesService.html",[115,0.864,761,2.675]],["body/injectables/FilesService.html",[3,0.12,4,0.12,5,0.137,7,0.287,8,0.012,13,0.712,20,0.12,21,0.215,25,0.008,26,0.008,83,0.982,110,1.971,115,1.229,116,1.65,118,0.483,119,1.665,121,1.017,123,2.203,147,2.202,148,0.908,149,0.908,150,2.07,173,1.404,326,2.371,365,2.29,371,1.307,372,2.86,373,2.371,385,2.371,388,2.365,389,2.858,392,3.416,401,1.707,403,1.707,440,3.016,561,4.787,736,3.503,742,5.354,761,3.805,763,4.701,809,3.866,810,5.928,811,4.417,812,4.417,813,4.417,814,4.417,815,4.417,816,6.527,817,3.866,818,3.866,819,3.866]],["title/controllers/HealthController.html",[0,1.207,820,3.049]],["body/controllers/HealthController.html",[0,1.6,2,1.6,3,0.151,4,0.151,5,0.101,7,0.319,8,0.012,13,0.891,20,0.151,21,0.269,22,2.21,23,3.054,25,0.009,26,0.009,110,1.46,118,0.605,119,1.924,121,0.753,123,1.552,133,2.664,142,1.294,180,3.762,182,2.374,307,4.723,820,5.012,821,4.836,822,6.85,823,5.526,824,5.526,825,6.85,826,6.85,827,6.85,828,4.382,829,5.526,830,5.526,831,5.526,832,5.526]],["title/modules/HealthModule.html",[27,1.037,43,2.845]],["body/modules/HealthModule.html",[2,2.091,3,0.164,4,0.164,5,0.11,7,0.332,8,0.012,13,0.972,20,0.164,21,0.294,25,0.01,26,0.01,27,1.796,29,2.496,43,4.929,55,2.791,820,5.657,828,4.777,833,6.024,834,6.024,835,7.22]],["title/classes/History.html",[21,0.203,836,2.529]],["body/classes/History.html",[3,0.129,4,0.129,5,0.087,7,0.327,8,0.012,20,0.129,21,0.372,25,0.008,26,0.008,66,1.639,83,0.911,118,0.518,121,0.944,142,1.621,149,0.994,276,1.59,311,1.289,318,1.25,362,2.726,371,1.043,471,1.075,477,3.337,478,3.557,481,2.874,498,1.767,502,3.274,507,2.482,508,3.765,514,3.801,515,1.828,518,2.317,541,3.575,593,2.598,595,3.036,598,3.632,621,2.871,836,4.841,837,5.375,838,4.73,839,4.73,840,4.73,841,4.73,842,2.377,843,2.281,844,2.281,845,3.229,846,2.871,847,2.032,848,3.751]],["title/interfaces/IUser.html",[141,1.506,849,2.675]],["body/interfaces/IUser.html",[3,0.145,4,0.145,5,0.097,8,0.012,20,0.145,25,0.009,26,0.009,27,1.322,83,1.133,118,0.581,141,2.415,148,1.025,149,1.062,150,1.936,276,1.714,311,2.199,315,3.856,318,2.028,319,2.867,484,4.423,587,3.627,849,3.411,850,4.214,851,4.651]],["title/classes/Job.html",[21,0.203,604,1.931]],["body/classes/Job.html",[3,0.092,4,0.092,5,0.062,7,0.21,8,0.012,20,0.157,21,0.164,25,0.007,26,0.007,58,0.973,66,1.294,83,1.066,114,1.344,118,0.368,121,1.111,142,1.909,148,0.806,149,1.072,234,1.068,276,1.255,311,1.728,318,1.526,341,2.48,381,1.955,433,2.028,440,2.369,453,2.48,471,0.763,474,3.327,475,2.392,476,2.157,477,2.784,478,2.574,481,3.449,482,5.167,484,3.655,485,3.849,486,3.449,494,2.039,495,2.821,496,2.039,498,2.369,521,3.327,527,4.224,528,4.578,529,4.578,530,4.224,531,4.578,533,4.578,534,3.504,535,3.341,604,2.268,852,2.459,853,3.36,854,3.36,855,3.36,856,3.36,857,3.36,858,3.36,859,3.36,860,3.36,861,3.36,862,3.36,863,3.36,864,3.36,865,3.36,866,3.36,867,3.36,868,3.36,869,2.459,870,2.294,871,2.941]],["title/controllers/JobsController.html",[0,1.207,872,3.049]],["body/controllers/JobsController.html",[0,0.985,2,0.985,3,0.093,4,0.093,5,0.062,7,0.313,8,0.012,9,2.381,13,0.549,20,0.093,21,0.166,24,1.409,25,0.007,26,0.007,64,1.229,83,1.086,96,2.741,104,2.844,110,1.79,118,0.372,119,1.387,121,0.924,123,1.903,133,1.64,141,2.794,142,1.587,144,2.301,147,2.087,148,0.861,149,0.861,150,1.962,151,2.592,173,1.569,176,2.591,180,3.193,181,1.64,182,1.461,187,1.461,193,1.785,194,1.461,236,2.409,326,1.975,365,1.908,371,1.088,372,1.975,373,1.975,377,1.517,378,2.844,379,2.977,384,2.202,385,1.36,388,2.301,389,1.64,390,1.96,392,1.96,394,2.183,396,1.785,397,1.868,398,2.121,401,1.314,403,1.314,406,1.576,407,2.064,413,2.997,414,2.183,415,2.183,417,1.96,418,1.96,422,1.96,517,4.289,604,3.461,797,2.489,872,3.613,873,2.977,874,4.611,875,2.977,876,2.183,877,3.401,878,3.371,879,3.401,880,3.401,881,3.401,882,3.601,883,2.183,884,3.401,885,5.099,886,2.489,887,3.401,888,3.732,889,2.977,890,3.916,891,3.401,892,3.401,893,2.183,894,3.401,895,3.401,896,3.401,897,2.183,898,3.401,899,2.183,900,3.401]],["title/modules/JobsModule.html",[27,1.037,44,2.845]],["body/modules/JobsModule.html",[2,1.936,3,0.145,4,0.145,5,0.097,7,0.339,8,0.012,13,0.857,20,0.145,21,0.259,25,0.009,26,0.009,27,1.819,29,2.202,30,2.283,31,2.462,32,2.462,33,2.283,34,3.388,35,3.097,44,5.511,51,3.097,52,2.462,53,2.462,55,2.462,57,2.788,58,1.539,148,0.675,431,2.918,433,2.202,604,2.462,870,4.563,872,5.351,888,5.259,889,4.651,901,4.651,902,4.651,903,5.314,904,5.314,905,4.651,906,4.214]],["title/injectables/JobsService.html",[115,0.864,888,2.675]],["body/injectables/JobsService.html",[3,0.093,4,0.093,5,0.062,7,0.332,8,0.012,13,0.548,20,0.093,21,0.165,22,1.973,23,1.514,25,0.007,26,0.007,58,0.983,63,1.706,64,2.098,65,1.706,66,1.535,83,1.018,96,3.034,97,1.957,104,2.957,110,0.897,115,1.023,116,1.268,118,0.372,119,1.385,121,0.963,123,1.901,141,2.697,144,1.789,147,2.175,148,0.897,149,0.897,150,2.045,151,3.019,187,1.459,226,1.782,234,1.846,236,2.043,265,2.484,301,1.957,311,1.736,318,0.897,326,1.973,341,1.459,364,2.693,365,1.906,371,1.087,372,2.323,373,1.973,377,2.199,378,2.59,384,2.199,385,1.358,388,1.046,398,2.119,401,1.312,403,1.312,436,3.5,440,2.638,445,1.865,447,2.061,448,2.842,450,2.693,451,2.693,453,1.459,454,2.972,455,2.061,456,2.061,458,2.061,459,2.061,460,2.972,461,2.061,462,2.061,463,2.993,464,1.514,465,2.993,466,2.993,468,2.061,469,2.061,470,2.061,517,4.286,604,1.573,869,2.484,875,4.317,882,3.073,885,4.621,888,3.166,890,3.911,905,2.972,907,2.972,908,3.395,909,3.395,910,4.317,911,3.395,912,3.395,913,3.395,914,2.318,915,3.395,916,2.693,917,3.395,918,2.972,919,3.395,920,3.395,921,3.395,922,3.395,923,3.395]],["title/injectables/JwtAuthGuard.html",[115,0.864,924,3.305]],["body/injectables/JwtAuthGuard.html",[3,0.195,4,0.107,5,0.072,7,0.307,8,0.012,11,4.594,13,0.631,20,0.107,21,0.19,22,1.564,25,0.007,26,0.007,83,0.515,110,1.659,114,2.181,115,1.131,116,1.46,118,0.428,119,1.531,121,0.856,123,1.531,144,2.201,147,1.934,148,0.798,149,0.798,150,1.818,173,1.733,182,1.679,186,2.373,234,2.351,257,2.509,307,2.373,315,2.74,352,3.618,354,2.431,355,3.422,356,2.253,406,1.811,519,2.051,701,3.422,847,2.342,924,4.324,925,3.422,926,5.452,927,5.452,928,5.452,929,3.422,930,5.868,931,3.909,932,5.452,933,5.556,934,3.909,935,4.97,936,5.452,937,3.909,938,6.793,939,3.909,940,3.422,941,2.86,942,3.422,943,3.1,944,3.1,945,3.1,946,4.772,947,3.909,948,4.324,949,5.452,950,3.909,951,3.909,952,5.452,953,3.909,954,3.909,955,3.909,956,3.909,957,3.909,958,5.452,959,3.909,960,5.452,961,3.909,962,3.909,963,4.637,964,3.909,965,3.909,966,3.909,967,3.909,968,3.909,969,3.909,970,3.909,971,3.909]],["title/injectables/JwtStrategy.html",[115,0.864,252,2.845]],["body/injectables/JwtStrategy.html",[3,0.117,4,0.117,5,0.079,7,0.327,8,0.012,13,0.693,16,4.623,17,2.478,20,0.117,21,0.209,22,2.328,23,2.595,25,0.008,26,0.008,83,0.766,104,2.465,110,1.136,115,1.207,116,1.606,118,0.47,119,1.635,121,0.794,123,1.208,141,2.555,144,1.324,147,1.793,148,0.968,149,0.739,150,1.686,151,2.595,187,1.847,188,3.884,189,3.41,205,3.146,207,3.146,220,3.146,233,4.616,234,2.097,235,3.41,236,1.782,252,3.974,257,2.76,270,3.763,284,5.776,308,1.992,309,3.146,311,1.927,315,2.925,316,3.763,318,1.744,319,2.642,320,5.095,516,3.803,847,2.501,945,3.41,972,3.763,973,5.095,974,4.3,975,4.3,976,5.821,977,4.3,978,4.3,979,3.763,980,5.095,981,4.3,982,4.3,983,4.3,984,3.41,985,5.821,986,4.3,987,3.763,988,4.3,989,3.763,990,3.763,991,4.3,992,4.3]],["title/injectables/LocalAuthGuard.html",[115,0.864,178,3.049]],["body/injectables/LocalAuthGuard.html",[3,0.167,4,0.167,5,0.112,7,0.313,8,0.012,13,0.99,20,0.167,21,0.299,25,0.01,26,0.01,115,1.514,116,2.293,178,5.342,208,5.373,257,3.94,847,3.137,942,5.373,993,5.373,994,7.301,995,4.868,996,6.139,997,6.139]],["title/injectables/LocalStrategy.html",[115,0.864,253,2.845]],["body/injectables/LocalStrategy.html",[3,0.134,4,0.134,5,0.09,7,0.32,8,0.012,13,0.792,18,4.557,20,0.134,21,0.239,22,1.964,25,0.009,26,0.009,83,1.041,104,2.632,110,1.298,115,1.318,116,1.834,118,0.537,119,1.785,121,0.867,123,1.379,144,2.171,147,1.958,148,0.807,149,0.807,150,1.84,173,1.56,177,3.894,207,3.592,233,3.894,234,1.56,236,2.034,253,4.339,257,3.151,291,5.562,295,2.98,352,2.83,406,2.275,516,4.061,547,4.093,847,2.73,940,4.297,945,3.894,973,5.562,979,4.297,980,5.562,987,4.297,995,3.894,998,4.297,999,4.91,1000,4.91,1001,6.355,1002,4.91,1003,4.91,1004,4.91,1005,4.91]],["title/classes/Mail.html",[21,0.203,1006,2.845]],["body/classes/Mail.html",[3,0.179,4,0.179,5,0.12,8,0.011,20,0.179,21,0.319,25,0.01,26,0.01,471,1.489,1006,5.18,1007,5.736]],["title/controllers/MailController.html",[0,1.207,1008,3.049]],["body/controllers/MailController.html",[0,1.044,2,1.044,3,0.098,4,0.098,5,0.066,7,0.344,8,0.012,9,1.738,13,0.581,20,0.098,21,0.176,22,1.441,23,2.921,24,2.715,25,0.007,26,0.007,58,1.044,63,1.811,64,1.86,65,1.811,66,0.952,77,2.858,104,2.243,110,0.952,118,0.394,119,1.446,121,0.491,123,1.012,133,1.738,142,0.844,148,0.458,173,1.145,176,2.701,180,2.827,181,1.738,182,1.548,193,1.891,194,1.548,234,2.202,236,2.488,296,2.313,318,1.587,381,1.22,396,1.891,397,1.979,401,1.393,403,1.393,436,3.298,445,1.979,521,2.967,527,2.637,581,2.313,604,2.385,693,4.794,784,3.154,869,2.637,874,4.763,910,3.154,918,3.154,935,2.637,1006,2.46,1008,3.767,1009,3.154,1010,6.552,1011,3.604,1012,3.604,1013,5.148,1014,3.604,1015,3.855,1016,3.154,1017,4.083,1018,2.46,1019,6.006,1020,2.858,1021,2.858,1022,2.077,1023,2.637,1024,3.154,1025,2.858,1026,3.604,1027,3.604,1028,3.604,1029,3.604,1030,3.154,1031,3.154,1032,3.604,1033,3.604,1034,3.604,1035,3.604,1036,3.604,1037,3.604,1038,3.604,1039,3.604,1040,3.604,1041,3.604,1042,3.604,1043,3.604,1044,4.506,1045,3.604,1046,3.604,1047,5.148,1048,3.604,1049,3.604,1050,3.604,1051,3.604,1052,3.604,1053,3.604,1054,3.604,1055,3.604,1056,3.604,1057,3.604,1058,4.506,1059,3.604,1060,3.604,1061,3.604,1062,3.154,1063,3.604,1064,3.604,1065,3.604,1066,5.148,1067,3.604,1068,3.604,1069,3.604,1070,5.148,1071,5.148,1072,3.604,1073,3.604,1074,3.604]],["title/modules/MailModule.html",[27,1.037,45,2.845]],["body/modules/MailModule.html",[2,1.698,3,0.118,4,0.118,5,0.08,7,0.349,8,0.012,13,0.701,16,4.312,17,2.506,20,0.118,21,0.212,25,0.008,26,0.008,27,1.651,29,1.801,30,1.868,31,2.015,32,2.015,33,1.868,34,3.075,35,2.015,45,5.217,51,2.717,52,2.015,53,2.015,55,2.015,57,2.281,58,1.259,103,3.448,104,1.624,111,3.448,114,2.654,134,3.805,144,1.339,148,0.745,173,1.382,293,3.805,431,2.388,433,2.43,604,2.015,870,4.004,906,3.448,984,4.651,1008,4.856,1015,4.905,1016,3.805,1020,4.651,1021,3.448,1022,2.506,1024,3.805,1025,3.448,1058,3.805,1075,3.805,1076,3.805,1077,4.348,1078,4.348,1079,4.348,1080,3.805,1081,3.181,1082,5.865,1083,4.348,1084,4.004,1085,3.805,1086,4.348,1087,4.348,1088,4.348,1089,4.348,1090,4.348,1091,4.348,1092,4.348,1093,3.805,1094,4.348,1095,4.348,1096,4.348,1097,4.348,1098,4.348,1099,4.348,1100,4.348]],["title/injectables/MailService.html",[115,0.864,1015,2.675]],["body/injectables/MailService.html",[3,0.12,4,0.12,5,0.081,7,0.287,8,0.012,13,0.712,20,0.12,21,0.215,25,0.008,26,0.008,83,0.982,110,1.971,115,1.229,116,1.65,118,0.483,119,1.665,121,1.017,123,2.203,147,2.202,148,0.908,149,0.908,150,2.07,173,1.404,326,2.371,365,2.29,371,1.307,372,2.86,373,2.371,385,2.371,388,2.365,389,2.858,392,3.416,401,1.707,403,1.707,440,3.016,581,4.787,816,6.527,817,3.866,818,3.866,819,3.866,1006,5.091,1015,3.805,1017,4.701,1018,5.354,1101,3.866,1102,5.928,1103,4.417,1104,4.417,1105,4.417,1106,4.417,1107,4.417]],["title/injectables/MulterConfigService.html",[115,0.864,805,3.049]],["body/injectables/MulterConfigService.html",[3,0.101,4,0.101,5,0.128,7,0.301,8,0.012,13,0.599,20,0.101,21,0.181,25,0.007,26,0.007,83,0.804,110,1.755,114,1.486,115,1.091,116,1.387,118,0.406,119,1.477,121,0.833,123,1.477,147,1.144,148,0.776,149,0.472,150,1.076,160,4.604,186,2.254,226,2.76,234,1.18,276,1.349,296,3.92,297,2.254,308,1.721,340,4.604,360,6.135,371,0.819,530,2.718,680,2.718,730,3.591,750,3.251,755,3.251,766,2.718,805,3.849,1080,3.251,1081,3.849,1093,3.251,1108,3.251,1109,6.107,1110,6.641,1111,5.26,1112,3.714,1113,6.641,1114,5.26,1115,3.714,1116,3.714,1117,3.714,1118,5.26,1119,5.26,1120,5.26,1121,3.714,1122,3.714,1123,3.714,1124,5.813,1125,5.26,1126,5.26,1127,6.107,1128,5.26,1129,5.26,1130,4.604,1131,3.714,1132,3.714,1133,3.714,1134,3.714,1135,3.714,1136,3.714,1137,5.26,1138,3.714,1139,3.714,1140,3.714,1141,3.714,1142,3.714,1143,3.714,1144,6.107,1145,3.714,1146,3.714,1147,3.714,1148,3.714,1149,3.714,1150,3.714,1151,3.714,1152,3.714,1153,3.714,1154,3.714,1155,3.714,1156,3.714,1157,3.714,1158,5.26,1159,3.714,1160,3.714,1161,5.26,1162,3.714,1163,3.714,1164,3.714,1165,5.26,1166,5.26,1167,3.714,1168,3.714,1169,3.714,1170,5.26,1171,3.714,1172,5.26,1173,3.714]],["title/classes/Permission.html",[21,0.203,308,1.931]],["body/classes/Permission.html",[3,0.111,4,0.111,5,0.075,7,0.241,8,0.012,20,0.175,21,0.199,25,0.008,26,0.008,27,1.6,58,1.185,66,1.487,83,1.069,114,1.636,118,0.448,121,1.083,142,1.861,148,0.817,149,1.064,234,1.3,276,1.443,308,2.607,311,1.752,318,1.7,341,2.763,433,2.331,453,2.763,471,0.929,474,3.707,477,3.101,478,2.868,481,3.209,482,5.085,484,3.707,485,3.903,486,3.477,494,2.483,495,3.243,496,2.483,498,2.402,587,4.39,588,4.705,655,2.793,673,2.993,1174,2.993,1175,4.091,1176,4.091,1177,4.091,1178,4.091,1179,4.091,1180,4.091,1181,4.091,1182,4.091,1183,4.091,1184,3.58]],["title/controllers/PermissionsController.html",[0,1.207,1185,3.049]],["body/controllers/PermissionsController.html",[0,1.013,2,1.013,3,0.095,4,0.095,5,0.064,7,0.316,8,0.012,9,2.43,13,0.564,20,0.095,21,0.171,24,1.45,25,0.007,26,0.007,64,1.265,83,1.09,96,2.777,110,1.811,118,0.383,119,1.416,121,0.934,123,1.924,133,1.687,141,2.812,142,1.604,144,1.991,147,2.11,148,0.87,149,0.87,150,1.984,173,1.602,176,2.645,181,1.687,182,1.504,187,1.504,193,1.836,194,1.504,308,3.488,315,2.969,326,2.016,365,1.948,371,1.111,372,2.016,373,2.016,377,1.561,378,2.882,384,2.248,385,1.4,388,2.318,389,1.687,390,2.017,392,2.017,394,2.246,396,1.836,397,1.922,398,2.166,401,1.352,403,1.352,406,1.622,407,2.124,413,3.059,414,2.246,415,2.246,417,2.017,418,2.017,422,2.017,584,4.58,598,2.645,797,2.561,876,2.246,878,3.441,882,3.839,883,2.246,886,2.561,893,2.246,897,2.246,899,2.246,1185,3.688,1186,3.063,1187,3.063,1188,3.5,1189,2.389,1190,3.5,1191,2.561,1192,3.5,1193,3.5,1194,5.138,1195,3.5,1196,3.792,1197,3.063,1198,3.998,1199,3.5,1200,3.5,1201,3.5,1202,3.5,1203,3.5,1204,3.5,1205,3.5]],["title/modules/PermissionsModule.html",[27,1.037,46,2.845]],["body/modules/PermissionsModule.html",[2,1.942,3,0.146,4,0.146,5,0.098,7,0.34,8,0.012,13,0.862,20,0.146,21,0.26,25,0.009,26,0.009,27,1.824,29,2.214,30,2.295,31,2.476,32,2.476,33,2.295,34,3.397,35,2.476,46,5.518,51,3.108,52,2.476,53,2.476,55,2.476,57,2.804,58,1.547,148,0.679,308,2.476,431,2.934,433,2.214,655,4.579,660,4.237,1185,5.364,1196,5.189,1197,4.676,1206,4.676,1207,4.676,1208,5.343,1209,5.343,1210,4.676]],["title/injectables/PermissionsService.html",[115,0.864,1196,2.675]],["body/injectables/PermissionsService.html",[3,0.088,4,0.088,5,0.059,7,0.323,8,0.012,13,0.522,20,0.088,21,0.158,22,1.905,23,1.443,25,0.006,26,0.006,27,1.185,58,0.937,63,1.626,64,2.041,65,1.626,66,1.493,83,0.99,96,2.983,97,1.865,104,2.929,110,0.855,115,0.988,116,1.209,118,0.354,119,1.337,121,0.947,123,1.865,141,2.661,147,2.139,148,0.936,149,0.882,150,2.011,151,2.961,173,1.029,187,1.39,226,1.698,234,2.207,236,2.341,301,1.865,307,1.964,308,2.207,311,1.809,318,1.259,326,1.905,341,1.39,352,1.865,365,1.84,371,1.05,372,1.905,373,1.905,377,2.123,378,2.519,384,2.123,385,1.295,388,0.997,398,1.39,401,1.251,403,1.251,436,3.422,440,2.594,445,1.777,447,1.964,448,1.865,453,1.39,455,1.964,456,1.964,457,2.077,458,1.964,459,1.964,461,1.964,462,1.964,463,2.89,464,1.443,465,2.89,466,2.89,468,1.964,469,1.964,470,1.964,584,4.457,587,4.533,588,4.858,666,4.168,673,2.368,682,2.833,730,2.21,882,3.551,914,2.21,916,2.567,963,3.251,1187,4.168,1194,4.533,1196,3.057,1198,3.777,1210,2.833,1211,2.833,1212,3.237,1213,3.237,1214,3.237,1215,3.237,1216,3.237,1217,3.237,1218,3.237,1219,3.484,1220,3.237,1221,3.237,1222,3.237,1223,3.237,1224,3.237,1225,3.237,1226,3.237]],["title/classes/RegisterUserDto.html",[21,0.203,171,2.187]],["body/classes/RegisterUserDto.html",[3,0.081,4,0.081,5,0.054,7,0.256,8,0.012,20,0.146,21,0.34,24,1.848,25,0.006,26,0.006,66,1.179,83,1.065,94,3.621,118,0.324,121,0.917,142,1.574,148,0.912,149,0.912,171,2.341,183,1.799,184,4.234,194,1.273,276,1.144,295,2.707,311,0.808,318,1.977,319,2.003,354,3.676,356,1.708,371,0.653,381,2.02,388,0.913,440,2.229,464,1.989,471,0.674,473,3.66,475,1.848,486,2.067,498,1.666,502,3.236,507,1.555,511,2.863,512,2.863,513,3.442,514,2.45,515,1.145,516,2.571,518,3.022,519,4.289,520,4.467,522,1.903,526,3.442,537,1.903,540,3.924,541,3.439,542,2.707,543,2.169,544,3.264,545,1.628,546,3.924,547,4.033,548,4.357,549,4.234,550,1.903,551,3.264,552,2.169,553,2.169,556,3.215,636,2.594,1227,2.964,1228,2.964,1229,2.964,1230,2.964,1231,2.964,1232,2.964]],["title/interfaces/Response.html",[154,2.675,849,2.675]],["body/interfaces/Response.html",[3,0.134,4,0.134,5,0.09,7,0.331,8,0.012,13,0.794,20,0.173,21,0.24,25,0.009,26,0.009,83,0.929,110,1.301,115,1.32,118,0.539,149,0.896,150,1.843,154,4.086,182,2.115,276,1.632,406,2.281,440,2.636,518,2.886,680,3.601,732,5.402,849,3.159,850,3.904,930,5.595,933,4.658,935,3.601,941,3.601,948,3.904,1233,3.904,1234,6.761,1235,5.572,1236,5.572,1237,5.572,1238,3.904,1239,4.308,1240,4.308,1241,3.601,1242,3.601,1243,4.308,1244,5.572,1245,4.308,1246,3.904,1247,4.308,1248,4.308,1249,4.308]],["title/classes/Resume.html",[21,0.203,1250,2.529]],["body/classes/Resume.html",[3,0.092,4,0.092,5,0.062,7,0.273,8,0.012,20,0.158,21,0.165,25,0.007,26,0.007,58,0.978,66,1.298,83,1.03,114,2.702,118,0.37,121,1.078,142,1.852,149,1.07,220,2.471,234,1.073,276,1.26,311,1.732,318,1.923,341,2.488,354,1.506,381,1.664,432,2.956,433,2.036,453,2.488,471,0.767,474,3.337,477,3.066,478,2.835,479,3.896,481,3.13,482,4.979,484,3.664,485,4.278,486,3.266,494,2.05,495,2.832,496,2.05,497,3.896,498,2.954,596,4.237,597,4.237,598,3.336,599,4.592,600,4.237,604,1.565,836,3.514,906,2.679,1025,2.679,1250,2.982,1251,2.471,1252,5.358,1253,5.59,1254,3.378,1255,3.378,1256,3.378,1257,3.378,1258,3.378,1259,3.378,1260,3.378,1261,3.378,1262,3.378,1263,3.378,1264,3.378,1265,3.378,1266,3.378,1267,2.679,1268,2.679,1269,3.378,1270,3.378,1271,3.378,1272,2.471,1273,2.956]],["title/controllers/ResumesController.html",[0,1.207,1274,3.049]],["body/controllers/ResumesController.html",[0,0.926,2,0.926,3,0.087,4,0.087,5,0.059,7,0.307,8,0.012,9,2.706,13,0.516,20,0.087,21,0.156,24,1.326,25,0.006,26,0.006,64,1.156,83,1.091,96,2.662,104,2.583,110,1.828,118,0.35,119,1.326,121,0.943,123,1.942,133,1.543,141,2.856,142,1.619,143,2.8,144,2.309,147,2.13,148,0.878,149,0.878,150,2.002,151,2.105,173,1.5,176,1.679,181,1.543,182,1.374,187,1.374,193,1.679,194,1.374,236,1.956,354,1.427,365,1.824,371,1.041,372,1.888,373,1.888,377,1.427,378,2.763,384,2.105,385,1.28,388,2.261,389,1.543,390,1.844,394,2.053,396,1.679,397,1.757,398,2.028,401,1.236,403,1.236,406,1.482,407,1.942,413,2.866,414,2.053,415,2.053,417,2.721,418,1.844,422,1.844,593,1.757,598,3.629,609,4.439,845,3.223,846,1.942,876,2.053,878,3.223,882,3.772,883,2.053,886,2.341,893,2.053,897,2.053,899,2.053,1189,2.184,1191,2.341,1250,4.456,1268,2.537,1274,3.455,1275,2.8,1276,5.784,1277,4.722,1278,4.132,1279,2.8,1280,3.199,1281,3.199,1282,3.199,1283,3.199,1284,4.722,1285,3.199,1286,3.199,1287,3.199,1288,3.199,1289,3.199,1290,3.602,1291,2.8,1292,3.199,1293,3.199,1294,3.199,1295,3.199,1296,3.199,1297,3.199,1298,3.199,1299,3.199,1300,3.199,1301,3.199,1302,3.199,1303,3.199,1304,3.199,1305,3.199]],["title/modules/ResumesModule.html",[27,1.037,47,2.845]],["body/modules/ResumesModule.html",[2,1.942,3,0.146,4,0.146,5,0.098,7,0.34,8,0.012,13,0.862,20,0.146,21,0.26,25,0.009,26,0.009,27,1.824,29,2.214,30,2.295,31,2.476,32,2.476,33,2.295,34,3.397,35,2.476,47,5.518,51,3.108,52,2.476,53,2.476,55,2.476,57,2.804,58,1.547,148,0.679,431,2.934,433,2.214,1250,3.243,1272,4.908,1274,5.364,1290,5.189,1291,4.676,1306,4.676,1307,4.676,1308,5.343,1309,5.343,1310,4.676,1311,5.343]],["title/injectables/ResumesService.html",[115,0.864,1290,2.675]],["body/injectables/ResumesService.html",[3,0.073,4,0.073,5,0.049,7,0.312,8,0.012,13,0.43,20,0.073,21,0.13,22,1.646,23,1.189,25,0.006,26,0.006,58,0.772,63,1.34,64,1.816,65,1.34,66,1.328,83,1.014,96,2.771,97,1.537,104,2.929,110,1.328,115,0.853,116,0.996,118,0.292,119,1.156,121,0.917,123,1.812,141,2.716,144,0.821,147,2.071,148,0.905,149,0.854,150,1.947,151,2.876,173,1.795,187,1.146,226,1.399,234,1.795,236,2.341,265,1.951,301,1.537,311,2.074,318,1.835,341,1.146,352,2.372,365,1.59,371,0.907,372,1.646,373,1.646,377,1.835,378,2.24,384,1.835,385,1.067,388,0.821,398,1.146,401,1.03,403,1.03,436,3.102,440,2.41,445,1.464,447,1.618,448,1.537,450,2.115,451,2.115,453,1.146,455,1.618,456,2.497,457,1.712,458,1.618,459,1.618,461,1.618,462,1.618,463,2.497,464,2.24,465,2.497,466,2.497,468,1.618,469,1.618,470,1.618,474,1.537,477,1.984,478,2.24,481,1.907,593,1.464,596,1.951,597,1.951,598,3.528,600,1.951,609,4.141,732,2.809,836,2.497,845,2.809,846,1.618,882,3.509,914,2.809,989,2.334,990,2.334,1081,3.011,1250,1.618,1267,2.115,1278,3.601,1279,3.601,1290,2.641,1310,2.334,1312,2.334,1313,4.115,1314,2.667,1315,2.667,1316,4.115,1317,2.667,1318,2.667,1319,2.667,1320,2.667,1321,2.667,1322,2.667,1323,4.115,1324,2.667,1325,2.667,1326,2.667,1327,2.667,1328,4.115,1329,2.667,1330,2.667,1331,2.667,1332,2.667,1333,2.667,1334,2.667,1335,2.667,1336,2.334,1337,3.601,1338,4.115,1339,4.115,1340,4.115,1341,4.115,1342,4.115,1343,3.676,1344,3.676,1345,2.667,1346,2.667,1347,2.667,1348,2.667]],["title/classes/Role.html",[21,0.203,319,1.557]],["body/classes/Role.html",[3,0.107,4,0.107,5,0.072,7,0.27,8,0.012,20,0.171,21,0.191,25,0.007,26,0.007,58,1.134,66,1.443,83,1,114,2.514,118,0.429,121,1.073,142,1.843,148,0.798,149,1.063,234,1.245,276,1.4,308,2.912,311,1.712,315,3.158,318,1.661,319,2.039,341,2.7,433,2.262,453,2.7,471,0.89,474,3.622,475,2.604,477,3.03,478,2.802,481,3.15,482,5.002,484,3.622,485,4.126,486,3.52,494,2.377,495,3.147,496,2.377,498,2.671,534,3.814,535,3.727,621,2.377,656,3.107,657,2.514,660,3.107,674,2.674,1252,4.33,1253,4.33,1349,2.866,1350,3.917,1351,3.917,1352,3.917,1353,3.917,1354,3.917,1355,3.428,1356,3.917,1357,3.917,1358,3.917,1359,3.917,1360,4.779,1361,3.428]],["title/controllers/RolesController.html",[0,1.207,1362,3.049]],["body/controllers/RolesController.html",[0,1.017,2,1.017,3,0.096,4,0.096,5,0.064,7,0.316,8,0.012,9,2.437,13,0.567,20,0.096,21,0.171,24,1.455,25,0.007,26,0.007,64,1.269,83,1.091,96,2.782,110,1.813,118,0.384,119,1.419,121,0.935,123,1.927,133,1.694,141,2.814,142,1.607,144,1.994,147,2.113,148,0.872,149,0.872,150,1.987,173,1.606,176,2.652,181,1.694,182,1.509,187,1.509,188,3.251,193,1.843,194,1.509,319,2.909,326,2.021,365,1.953,371,1.114,372,2.021,373,2.021,377,1.566,378,2.887,384,2.254,385,1.405,388,2.321,389,1.694,390,2.024,392,2.024,394,2.254,396,1.843,397,1.929,398,2.171,401,1.357,403,1.357,406,1.627,407,2.132,413,3.067,414,2.254,415,2.254,417,2.024,418,2.024,422,2.024,610,4.586,797,2.57,876,2.254,878,3.45,882,3.842,883,2.254,886,2.57,893,2.254,897,2.254,899,2.254,1189,2.398,1191,2.57,1362,3.698,1363,3.074,1364,3.074,1365,3.074,1366,3.512,1367,3.512,1368,3.512,1369,3.512,1370,5.143,1371,3.512,1372,3.074,1373,4.008,1374,3.512,1375,3.512,1376,3.512,1377,3.512,1378,3.512,1379,3.512,1380,3.512]],["title/modules/RolesModule.html",[27,1.037,48,2.675]],["body/modules/RolesModule.html",[2,1.906,3,0.141,4,0.141,5,0.095,7,0.337,8,0.012,13,0.836,20,0.141,21,0.253,25,0.009,26,0.009,27,1.799,29,2.149,30,2.228,31,2.403,32,2.403,33,2.228,34,3.351,35,3.351,48,5.231,51,3.05,52,2.403,53,2.403,55,2.403,57,2.721,58,1.502,148,0.659,188,4.661,319,1.937,431,2.848,433,2.149,657,4.225,661,3.794,1362,5.291,1372,4.539,1381,4.539,1382,4.539,1383,4.539,1384,5.186,1385,5.186,1386,4.539]],["title/injectables/RolesService.html",[115,0.864,188,2.289]],["body/injectables/RolesService.html",[3,0.089,4,0.089,5,0.06,7,0.328,8,0.012,13,0.525,20,0.089,21,0.158,22,1.912,23,1.45,25,0.007,26,0.007,58,0.942,63,1.635,64,2.047,65,1.635,66,1.498,83,0.991,96,2.989,97,1.875,104,2.932,110,0.86,115,0.991,116,1.215,118,0.356,119,1.342,121,0.948,123,1.869,141,2.665,147,2.143,148,0.986,149,0.884,150,2.014,151,2.967,173,1.034,187,1.397,188,2.625,226,1.707,234,2.114,236,2.348,301,1.875,307,1.974,311,1.701,315,2.402,318,0.86,319,1.785,326,1.912,341,1.397,352,1.875,365,1.847,371,1.054,372,1.912,373,1.912,377,2.131,378,2.527,384,2.131,385,1.301,388,1.002,398,1.397,401,1.257,403,1.257,436,3.43,440,2.599,445,1.786,447,1.974,448,1.875,453,1.397,455,1.974,456,1.974,457,2.088,458,1.974,459,1.974,461,1.974,462,1.974,463,2.901,464,1.45,465,2.901,466,2.901,468,1.974,469,1.974,470,1.974,475,1.98,534,2.901,610,4.465,667,3.791,674,2.221,676,2.38,683,2.58,713,2.58,730,2.221,882,3.467,914,2.221,916,2.58,963,3.263,1219,3.497,1343,2.38,1344,2.38,1365,4.183,1370,4.542,1373,3.791,1386,2.847,1387,2.847,1388,3.253,1389,3.253,1390,3.253,1391,3.253,1392,3.253,1393,3.253,1394,3.253,1395,2.847,1396,3.253,1397,3.253,1398,3.253,1399,3.253,1400,3.253,1401,3.253]],["title/classes/Subscriber.html",[21,0.203,1022,2.402]],["body/classes/Subscriber.html",[3,0.113,4,0.113,5,0.076,7,0.244,8,0.012,20,0.177,21,0.203,25,0.008,26,0.008,58,1.205,66,1.504,83,1.05,114,2.595,118,0.455,121,1.072,142,1.841,148,0.824,149,1.062,234,1.322,276,1.46,311,1.768,318,1.994,341,2.788,433,2.359,453,2.788,471,0.945,474,3.74,477,3.128,478,2.893,481,3.232,482,5.017,484,3.74,485,3.938,486,3.495,494,2.525,495,3.281,496,2.525,498,2.424,521,3.74,1022,3.281,1023,3.045,1084,2.841,1355,3.642,1360,4.982,1402,3.045,1403,4.161,1404,4.161,1405,4.161,1406,4.161,1407,4.161,1408,4.161,1409,4.161,1410,4.161,1411,3.642]],["title/controllers/SubscribersController.html",[0,1.207,1412,3.049]],["body/controllers/SubscribersController.html",[0,0.971,2,0.971,3,0.091,4,0.091,5,0.061,7,0.311,8,0.012,9,2.357,13,0.541,20,0.091,21,0.163,24,1.39,25,0.007,26,0.007,64,1.212,83,1.066,96,2.723,110,1.859,118,0.367,119,1.373,121,0.959,123,1.975,133,1.617,141,2.881,142,1.647,144,2.166,147,2.166,148,0.893,149,0.893,150,2.036,173,1.553,176,1.76,181,1.617,182,1.441,187,1.441,193,1.76,194,1.441,326,1.955,365,1.889,371,1.078,372,1.955,373,1.955,377,1.496,378,2.826,384,2.18,385,1.342,388,2.166,389,1.617,390,1.933,396,2.565,397,1.842,398,2.1,401,1.296,403,1.296,406,1.554,407,2.036,413,2.967,414,2.153,415,2.153,417,1.933,418,1.933,422,1.933,521,2.817,622,4.514,876,2.153,878,3.337,882,3.808,883,2.153,893,2.153,897,2.153,899,2.153,1022,4.288,1044,5.048,1189,2.29,1191,2.454,1412,3.577,1413,2.936,1414,4.278,1415,2.936,1416,3.354,1417,3.354,1418,3.354,1419,2.936,1420,3.354,1421,4.888,1422,3.354,1423,3.354,1424,2.936,1425,4.801,1426,3.354,1427,3.354,1428,3.702,1429,2.936,1430,3.877,1431,4.574,1432,3.354,1433,3.354,1434,3.354,1435,3.354,1436,3.354,1437,3.354,1438,3.354,1439,3.354,1440,3.354,1441,2.936,1442,3.354,1443,3.354]],["title/modules/SubscribersModule.html",[27,1.037,49,2.845]],["body/modules/SubscribersModule.html",[2,1.942,3,0.146,4,0.146,5,0.098,7,0.34,8,0.012,13,0.862,20,0.146,21,0.26,25,0.009,26,0.009,27,1.824,29,2.214,30,2.295,31,2.476,32,2.476,33,2.295,34,3.397,35,2.476,49,5.518,51,3.108,52,2.476,53,2.476,55,2.476,57,2.804,58,1.547,148,0.679,431,2.934,433,2.214,1022,3.079,1084,4.579,1085,4.676,1412,5.364,1428,5.189,1429,4.676,1444,4.676,1445,4.676,1446,5.343,1447,5.343,1448,4.676]],["title/injectables/SubscribersService.html",[115,0.864,1428,2.675]],["body/injectables/SubscribersService.html",[3,0.088,4,0.088,5,0.059,7,0.322,8,0.012,13,0.519,20,0.088,21,0.157,22,1.895,23,1.434,25,0.006,26,0.006,58,0.931,63,1.616,64,2.033,65,1.616,66,1.487,83,0.943,96,2.976,97,1.853,104,2.981,110,0.85,115,0.983,116,1.201,118,0.352,119,1.331,121,0.977,123,1.946,141,2.758,144,1.733,147,2.207,148,0.97,149,0.91,150,2.074,151,3.089,173,1.022,187,1.381,226,1.687,234,2.104,236,2.332,301,1.853,307,1.951,311,1.533,318,1.75,326,1.895,341,1.381,352,1.853,365,1.831,371,1.045,372,1.895,373,1.895,377,2.113,378,2.509,384,2.113,385,1.286,388,0.99,398,1.381,401,1.242,403,1.242,436,3.411,440,2.588,445,1.766,447,1.951,448,1.853,453,1.381,455,1.951,456,1.951,457,2.064,458,1.951,459,1.951,461,1.951,462,1.951,463,2.876,464,1.434,465,2.876,466,2.876,468,1.951,469,1.951,470,1.951,521,2.731,622,4.446,730,2.195,882,3.193,914,2.195,963,3.235,1022,2.731,1023,2.352,1030,2.814,1031,4.148,1219,3.467,1343,2.352,1344,2.352,1414,4.148,1415,4.148,1419,2.814,1424,2.814,1425,4.24,1428,3.042,1430,3.758,1448,2.814,1449,2.814,1450,3.215,1451,3.215,1452,3.215,1453,3.215,1454,3.215,1455,3.215,1456,3.215,1457,3.215,1458,3.215,1459,3.215,1460,3.215,1461,3.215,1462,3.215,1463,3.215,1464,3.215]],["title/injectables/TransformInterceptor.html",[115,0.864,1242,3.049]],["body/injectables/TransformInterceptor.html",[3,0.13,4,0.13,5,0.088,7,0.329,8,0.012,13,0.772,20,0.17,21,0.233,22,1.915,25,0.009,26,0.009,83,0.63,110,1.266,115,1.297,116,1.789,118,0.524,119,1.756,121,0.853,123,1.345,147,1.926,148,0.794,149,0.794,150,1.811,154,3.074,182,2.057,406,2.219,440,1.789,518,2.336,680,3.504,732,4.753,849,3.074,929,4.191,930,6.229,933,5.401,935,4.575,941,3.504,948,3.797,1233,3.797,1234,5.473,1235,5.473,1236,6.461,1237,6.094,1238,3.797,1239,4.191,1240,4.191,1241,3.504,1242,4.575,1243,6.094,1244,6.461,1245,4.191,1246,3.797,1247,4.191,1248,4.191,1249,4.191,1465,4.788,1466,4.788,1467,4.788]],["title/classes/UpdateCompanyDto.html",[21,0.203,393,2.845]],["body/classes/UpdateCompanyDto.html",[3,0.169,4,0.169,5,0.113,7,0.315,8,0.012,20,0.169,21,0.302,25,0.01,26,0.01,371,1.366,375,3.978,393,5.013,402,4.915,471,1.408,555,4.915,842,3.114,843,2.988,844,2.988,847,3.155,1468,5.424,1469,7.343]],["title/classes/UpdateFileDto.html",[21,0.203,742,2.845]],["body/classes/UpdateFileDto.html",[3,0.169,4,0.169,5,0.113,7,0.315,8,0.012,20,0.169,21,0.302,25,0.01,26,0.01,371,1.366,471,1.408,561,3.978,563,4.915,742,5.013,763,4.915,842,3.114,843,2.988,844,2.988,847,3.155,1470,5.424,1471,7.343]],["title/classes/UpdateJobDto.html",[21,0.203,885,2.845]],["body/classes/UpdateJobDto.html",[3,0.165,4,0.165,5,0.111,7,0.333,8,0.012,20,0.165,21,0.353,25,0.01,26,0.01,371,1.336,471,1.377,501,4.435,502,2.425,515,2.342,517,3.679,842,3.046,843,2.923,844,2.923,847,3.113,885,4.947,890,4.807,1472,5.306,1473,7.247]],["title/classes/UpdateMailDto.html",[21,0.203,1018,2.845]],["body/classes/UpdateMailDto.html",[3,0.169,4,0.169,5,0.113,7,0.315,8,0.012,20,0.169,21,0.302,25,0.01,26,0.01,371,1.366,471,1.408,581,3.978,583,4.915,842,3.114,843,2.988,844,2.988,847,3.155,1017,4.915,1018,5.013,1474,5.424,1475,7.343]],["title/classes/UpdatePermissionDto.html",[21,0.203,1194,2.845]],["body/classes/UpdatePermissionDto.html",[3,0.169,4,0.169,5,0.113,7,0.315,8,0.012,20,0.169,21,0.302,25,0.01,26,0.01,371,1.366,471,1.408,584,3.978,586,4.915,842,3.114,843,2.988,844,2.988,847,3.155,1194,5.013,1198,4.915,1476,5.424,1477,7.343]],["title/classes/UpdateResumeDto.html",[21,0.203,846,2.529]],["body/classes/UpdateResumeDto.html",[3,0.134,4,0.134,5,0.09,7,0.331,8,0.012,20,0.134,21,0.376,25,0.009,26,0.009,66,1.682,83,0.838,118,0.539,121,0.671,142,1.153,149,0.948,276,1.632,311,1.341,318,1.301,362,2.837,371,1.085,471,1.118,477,2.373,478,3.326,481,2.281,498,1.839,502,3.221,507,2.583,508,3.863,514,3.875,515,1.902,518,2.378,541,3.669,556,2.473,593,2.703,595,3.159,598,2.583,621,2.987,836,5.083,837,4.658,842,2.473,843,2.373,844,2.373,845,3.36,846,3.863,847,2.735,848,5.048,1478,4.922,1479,4.922,1480,4.922]],["title/classes/UpdateRoleDto.html",[21,0.203,1370,2.845]],["body/classes/UpdateRoleDto.html",[3,0.169,4,0.169,5,0.113,7,0.315,8,0.012,20,0.169,21,0.302,25,0.01,26,0.01,371,1.366,471,1.408,610,3.978,612,4.915,842,3.114,843,2.988,844,2.988,847,3.155,1370,5.013,1373,4.915,1481,5.424,1482,7.343]],["title/classes/UpdateSubscriberDto.html",[21,0.203,1425,2.845]],["body/classes/UpdateSubscriberDto.html",[3,0.169,4,0.169,5,0.113,7,0.315,8,0.012,20,0.169,21,0.302,25,0.01,26,0.01,371,1.366,471,1.408,622,3.978,624,4.915,842,3.114,843,2.988,844,2.988,847,3.155,1425,5.013,1430,4.915,1483,5.424,1484,7.343]],["title/classes/UpdateUserDto.html",[21,0.203,1485,2.845]],["body/classes/UpdateUserDto.html",[3,0.144,4,0.144,5,0.096,7,0.313,8,0.012,20,0.144,21,0.324,25,0.009,26,0.009,83,0.875,118,0.577,121,0.719,142,1.234,149,0.67,185,3.598,234,2.113,276,1.705,311,2.149,354,2.965,371,1.466,471,1.197,502,2.66,515,2.036,518,1.969,519,3.489,520,3.652,537,4.268,545,2.894,547,3.652,556,2.648,702,4.613,842,3.342,843,2.541,844,2.541,847,2.857,1485,4.54,1486,5.82,1487,6.65,1488,5.27,1489,6.65,1490,6.65,1491,6.65,1492,5.27,1493,5.27,1494,5.27,1495,5.27]],["title/classes/UpdatedBy.html",[21,0.203,478,1.858]],["body/classes/UpdatedBy.html",[3,0.132,4,0.132,5,0.089,7,0.33,8,0.012,20,0.132,21,0.375,25,0.009,26,0.009,66,1.669,83,0.923,118,0.532,121,0.861,142,1.479,149,0.977,276,1.619,311,1.911,318,1.853,362,2.801,371,1.071,471,1.104,477,2.343,478,3.431,481,2.252,498,2.359,502,3.256,507,2.55,508,3.832,514,3.851,515,1.878,518,2.359,541,3.639,593,2.669,595,3.12,598,2.55,607,4.254,621,2.95,836,4.786,837,5.131,842,2.442,843,2.343,844,2.343,845,3.318,846,2.95,847,2.088,848,3.855,1496,4.861,1497,4.861]],["title/classes/User.html",[21,0.203,144,1.284]],["body/classes/User.html",[3,0.093,4,0.093,5,0.062,7,0.249,8,0.012,20,0.158,21,0.166,25,0.007,26,0.007,58,0.985,66,1.305,83,1.075,114,2.71,118,0.372,121,1.099,142,1.887,144,1.521,148,0.81,149,1.071,234,1.081,242,4.254,276,1.266,311,1.738,318,1.868,319,2.383,341,2.498,381,1.968,433,2.046,440,1.845,453,2.498,471,0.773,473,3.051,474,3.351,477,2.803,478,2.592,479,3.916,481,2.956,482,5.086,484,3.677,485,4.112,486,3.461,494,2.064,495,2.846,496,2.064,497,3.916,498,2.723,547,3.193,548,3.528,549,3.528,653,2.322,658,2.322,661,2.489,675,2.489,1252,3.916,1253,3.916,1498,2.489,1499,3.401,1500,3.401,1501,3.401,1502,3.401,1503,3.401,1504,3.401,1505,3.401,1506,3.401,1507,3.401,1508,3.401,1509,3.401,1510,3.401,1511,3.401,1512,3.401,1513,2.977]],["title/classes/UserLoginDto.html",[21,0.203,183,2.529]],["body/classes/UserLoginDto.html",[3,0.09,4,0.09,5,0.061,7,0.271,8,0.012,20,0.156,21,0.353,24,2.903,25,0.007,26,0.007,66,1.282,83,1.064,94,3.48,118,0.363,121,0.661,142,1.136,148,0.852,149,0.801,171,1.742,183,2.944,184,3.48,194,1.426,276,1.244,295,4.072,311,0.904,318,1.852,319,2.142,354,3.605,356,1.913,371,0.732,381,2.135,388,1.023,440,2.142,464,2.163,471,0.754,473,3.309,475,2.613,486,2.248,498,1.812,502,3.29,507,1.742,511,3.114,512,3.114,513,3.68,514,2.664,515,1.283,516,2.796,518,3.057,519,4.211,520,4.371,522,2.131,526,3.68,537,2.131,540,4.195,541,3.304,542,2.944,543,2.429,544,3.55,545,1.823,546,3.55,547,4.156,548,4.072,549,3.827,550,2.131,551,3.55,552,3.55,553,3.55,1514,4.852,1515,3.32,1516,3.32]],["title/controllers/UsersController.html",[0,1.207,1517,3.049]],["body/controllers/UsersController.html",[0,0.953,2,0.953,3,0.09,4,0.09,5,0.06,7,0.31,8,0.012,9,2.325,12,2.61,13,0.531,20,0.09,21,0.16,24,1.364,25,0.007,26,0.007,64,1.189,83,1.063,96,2.698,104,2.939,110,1.767,118,0.36,119,1.354,121,0.912,123,1.878,133,1.587,141,2.773,142,1.566,144,2.487,147,2.059,148,0.849,149,0.849,150,1.936,151,2.801,171,1.727,173,1.532,176,1.727,180,2.648,181,1.587,182,1.414,185,3.291,193,1.727,194,1.414,203,2.881,205,2.408,236,2.602,282,3.133,311,0.897,326,1.928,341,1.414,365,1.863,371,1.063,372,2.282,373,1.928,377,1.468,378,2.801,382,3.824,384,2.15,385,1.317,388,2.152,389,1.587,390,1.897,396,2.53,397,2.648,398,2.071,401,1.272,403,1.272,406,1.525,407,1.998,413,2.926,417,1.897,418,1.897,422,1.897,545,3.836,876,2.113,882,3.794,883,2.113,893,2.113,897,2.113,899,2.113,1189,2.247,1268,2.61,1441,2.881,1485,4.769,1517,3.528,1518,2.881,1519,2.881,1520,2.881,1521,3.292,1522,3.292,1523,3.292,1524,3.292,1525,3.292,1526,2.881,1527,3.292,1528,3.292,1529,2.881,1530,2.881,1531,4.821,1532,3.292,1533,3.292,1534,2.881,1535,3.292,1536,3.292,1537,3.292,1538,3.292,1539,3.292,1540,3.292,1541,3.292,1542,3.292,1543,3.292,1544,3.292,1545,3.292]],["title/modules/UsersModule.html",[27,1.037,50,2.675]],["body/modules/UsersModule.html",[2,1.859,3,0.136,4,0.136,5,0.091,7,0.341,8,0.012,13,0.804,20,0.136,21,0.243,25,0.009,26,0.009,27,1.865,29,2.066,30,2.142,31,2.31,32,2.31,33,2.142,34,3.289,35,3.289,50,5.184,51,2.974,52,2.31,53,2.31,55,2.31,57,2.616,58,1.444,144,1.536,148,0.902,282,4.635,319,1.862,388,1.536,431,2.738,433,2.659,653,4.382,657,4.12,658,3.403,659,4.364,661,3.648,1517,5.194,1529,4.364,1546,4.364,1547,4.986,1548,4.364,1549,4.986,1550,4.986,1551,4.364]],["title/injectables/UsersService.html",[115,0.864,282,2.289]],["body/injectables/UsersService.html",[3,0.063,4,0.063,5,0.042,7,0.316,8,0.012,13,0.372,20,0.063,21,0.112,22,1.468,23,1.637,25,0.005,26,0.005,58,0.667,63,1.158,64,1.653,65,1.158,66,1.209,83,0.993,96,2.606,97,1.328,104,2.847,110,1.505,115,0.761,116,0.861,118,0.252,119,1.031,121,0.989,123,1.855,125,3.213,141,2.387,144,1.869,147,2.097,148,0.977,149,0.865,150,1.971,151,2.705,171,2.737,173,1.166,182,0.99,185,2.506,217,2.911,226,1.209,234,2.304,236,2.737,242,3.347,276,0.941,282,2.016,288,3.213,290,3.213,295,1.399,296,2.936,297,2.776,301,1.328,307,2.228,309,1.686,311,1,318,1.883,319,2.266,326,1.468,352,2.115,365,1.418,371,0.809,372,1.468,373,1.468,377,1.637,378,2.039,381,1.243,384,1.637,385,0.922,388,1.607,389,1.111,398,0.99,401,0.891,403,0.891,436,3.495,440,2.266,445,1.266,447,1.399,448,1.328,453,0.99,455,1.399,456,1.399,457,1.479,458,1.399,459,1.399,461,1.399,462,1.399,463,2.228,464,1.637,465,2.228,466,2.228,468,1.399,469,1.399,470,1.399,473,2.737,545,3.332,547,3.332,548,3.165,549,3.165,658,1.573,665,2.017,667,3.627,670,3.213,674,1.573,675,1.686,678,2.686,683,1.828,713,1.828,728,2.017,882,3.068,963,3.561,1081,1.686,1219,3.816,1246,1.828,1336,2.017,1337,2.017,1343,1.686,1344,1.686,1395,2.017,1485,3.561,1520,3.213,1526,2.017,1530,2.017,1534,3.213,1551,2.017,1552,2.017,1553,4.574,1554,4.574,1555,3.671,1556,3.671,1557,3.671,1558,2.305,1559,2.305,1560,2.305,1561,2.305,1562,2.305,1563,2.305,1564,2.305,1565,5.216,1566,2.305,1567,2.305,1568,2.305,1569,2.305,1570,2.305,1571,2.305,1572,2.305,1573,2.305,1574,2.305,1575,2.305,1576,2.305,1577,2.017,1578,2.305,1579,2.305,1580,2.305,1581,3.671,1582,2.305,1583,2.305,1584,4.574,1585,3.671,1586,2.017,1587,5.216,1588,3.671,1589,3.671,1590,2.305,1591,2.305]],["title/coverage.html",[1592,4.988]],["body/coverage.html",[0,2.138,1,1.709,5,0.068,6,2.044,8,0.012,14,1.499,18,1.346,21,0.405,25,0.005,26,0.005,33,1.003,115,1.612,117,2.044,131,1.709,132,2.044,141,0.844,144,1.142,149,0.297,154,1.499,171,1.225,173,0.742,178,1.709,180,1.283,181,1.126,183,1.417,184,3.189,188,1.283,252,1.594,253,1.594,275,2.044,282,1.283,308,1.082,319,0.872,368,1.709,369,2.044,375,1.499,381,1.562,393,1.594,399,1.499,429,1.709,434,2.044,472,2.714,478,1.041,500,2.942,501,3.376,517,1.417,537,3.679,545,1.283,554,2.044,555,2.942,561,1.499,562,2.044,563,2.942,581,1.499,582,2.044,583,2.942,584,1.499,585,2.044,586,2.942,593,1.283,594,2.942,595,3.679,604,1.082,609,1.499,610,1.499,611,2.044,612,2.942,622,1.499,623,2.044,624,2.942,643,1.709,644,2.044,646,1.499,653,1.594,655,1.594,657,1.499,662,2.044,676,1.709,677,1.852,678,1.709,693,6.376,733,2.044,734,1.709,735,2.044,742,1.594,761,1.499,805,1.709,809,2.044,820,1.709,821,2.044,836,1.417,837,3.376,846,1.417,849,2.381,851,2.044,852,2.714,870,1.594,872,1.709,873,2.044,885,1.594,888,1.499,907,2.044,924,1.852,925,2.044,943,1.852,944,1.852,972,2.044,993,2.044,998,2.044,1006,1.594,1007,2.044,1008,1.709,1009,2.044,1015,1.499,1018,1.594,1022,1.346,1084,1.594,1101,2.044,1108,2.044,1174,2.714,1185,1.709,1186,2.044,1194,1.594,1196,1.499,1211,2.044,1233,2.942,1241,1.709,1242,1.709,1250,1.417,1251,2.714,1272,1.709,1274,1.709,1275,2.044,1290,1.499,1312,2.044,1349,2.714,1362,1.709,1363,2.044,1370,1.594,1387,2.044,1402,2.714,1412,1.709,1413,2.044,1425,1.594,1428,1.499,1431,1.852,1449,2.044,1468,2.044,1470,2.044,1472,2.044,1474,2.044,1476,2.044,1481,2.044,1483,2.044,1485,1.594,1486,2.044,1498,2.714,1517,1.709,1518,2.044,1552,2.044,1592,2.044,1593,2.335,1594,2.335,1595,2.335,1596,8.269,1597,5.732,1598,6.837,1599,4.614,1600,6.637,1601,6.102,1602,6.837,1603,4.614,1604,4.614,1605,7.712,1606,4.038,1607,5.599,1608,2.335,1609,2.335,1610,2.044,1611,2.335,1612,3.709,1613,3.709,1614,2.335,1615,2.335,1616,2.335]],["title/dependencies.html",[30,2.155,1617,3.042]],["body/dependencies.html",[8,0.012,13,0.788,17,2.815,21,0.309,25,0.009,26,0.009,30,2.099,58,1.415,63,2.455,64,1.765,65,2.455,66,1.674,77,3.874,79,3.874,186,2.965,194,2.099,205,3.574,207,5.144,226,2.563,257,3.136,260,3.874,262,3.874,329,4.276,398,2.099,448,2.815,507,2.563,515,1.888,766,3.574,828,3.874,843,2.355,844,2.355,941,3.574,995,3.874,1020,3.874,1021,3.874,1238,3.874,1577,4.276,1618,4.885,1619,4.885,1620,7.438,1621,4.885,1622,4.885,1623,4.885,1624,4.885,1625,4.885,1626,4.885,1627,4.885,1628,4.885,1629,4.885,1630,4.885,1631,4.885,1632,4.885,1633,4.885,1634,4.885,1635,4.885,1636,4.885,1637,4.885,1638,4.885,1639,4.885,1640,4.885,1641,4.885,1642,4.885,1643,4.885,1644,4.885,1645,4.885,1646,4.885,1647,4.885,1648,4.885,1649,4.885,1650,4.885,1651,4.885,1652,4.885,1653,4.885,1654,4.885,1655,4.885]],["title/miscellaneous/functions.html",[1656,2.231,1657,4.39]],["body/miscellaneous/functions.html",[8,0.01,25,0.01,26,0.01,33,3.45,118,0.722,1610,5.775,1656,4.235,1657,5.775,1658,6.599]],["title/index.html",[118,0.38,1659,3.475,1660,3.475]],["body/index.html",[8,0.01,25,0.01,26,0.01,699,5.549,1130,5.549,1661,5.549,1662,5.549,1663,6.339,1664,6.339,1665,6.339,1666,6.339,1667,7.442,1668,7.442,1669,7.442,1670,7.442,1671,6.339,1672,6.339,1673,6.339,1674,6.339]],["title/modules.html",[29,2.361]],["body/modules.html",[8,0.009,25,0.009,26,0.009,28,4.043,29,2.29,39,3.772,40,3.772,41,3.772,42,3.772,43,3.772,44,3.772,45,3.772,46,3.772,47,3.772,48,3.547,49,3.772,50,3.547,1062,7.49,1675,8.558,1676,8.558,1677,8.591,1678,5.526,1679,5.526]],["title/overview.html",[1680,4.988]],["body/overview.html",[2,1.059,8,0.012,14,3.887,18,4.294,25,0.007,26,0.007,27,0.91,28,6.264,29,1.516,30,1.572,31,1.695,32,1.695,33,1.572,34,1.695,35,1.695,36,3.202,37,3.202,38,3.202,39,5.568,40,4.944,41,5.087,42,4.758,43,4.134,44,4.758,45,4.758,46,4.758,47,4.758,48,4.783,49,4.758,50,4.783,51,2.411,52,1.695,53,1.695,116,1.367,188,4.092,248,3.202,249,3.202,251,3.202,252,4.134,253,4.134,282,4.182,399,4.783,424,3.202,425,3.202,426,3.202,471,0.831,536,3.202,646,3.887,649,3.202,650,3.202,761,3.887,800,3.202,801,3.202,850,2.901,888,3.887,901,3.202,902,3.202,1015,3.887,1075,3.202,1076,3.202,1196,3.887,1206,3.202,1207,3.202,1290,3.887,1306,3.202,1307,3.202,1381,3.202,1382,3.202,1383,3.202,1428,3.887,1444,3.202,1445,3.202,1546,3.202,1548,3.202,1680,3.202,1681,5.203,1682,3.658,1683,3.658]],["title/properties.html",[276,1.286,1617,3.042]],["body/properties.html",[8,0.011,25,0.01,26,0.01,276,1.653,475,2.67,604,2.986,1661,5.641,1662,5.641,1684,6.445,1685,6.445,1686,6.445,1687,6.445,1688,6.445,1689,6.445]],["title/miscellaneous/typealiases.html",[1656,2.231,1690,5.015]],["body/miscellaneous/typealiases.html",[8,0.01,25,0.01,26,0.01,118,0.653,149,0.758,446,5.694,472,4.367,495,4.839,673,5.253,674,4.901,675,5.253,852,4.367,869,5.253,1023,5.253,1174,4.367,1251,4.367,1267,5.694,1349,4.367,1402,4.367,1498,4.367,1656,3.831,1691,5.968,1692,5.224,1693,5.224,1694,5.224,1695,5.224,1696,5.224,1697,5.224,1698,5.224]],["title/miscellaneous/variables.html",[1656,2.231,1699,4.39]],["body/miscellaneous/variables.html",[5,0.023,8,0.012,9,2.444,11,0.914,25,0.003,26,0.003,27,1.876,64,2.144,83,0.583,110,0.33,114,0.877,118,0.137,144,1.641,148,0.958,149,0.562,151,0.557,180,1.205,181,1.058,234,0.397,296,4.234,297,4.004,308,1.861,311,2.24,315,2.018,317,6.602,318,2.003,319,1.318,326,1.77,341,3.241,370,3.515,371,0.975,381,1.36,382,3.509,388,1.363,396,2.322,429,1.605,453,3.241,472,0.914,477,3.637,478,0.557,499,1.093,518,0.819,587,5.149,588,5.519,598,0.655,604,1.861,653,1.497,655,1.497,657,1.408,676,1.605,677,1.739,678,1.605,693,5.519,724,6.635,732,0.852,736,0.99,747,1.093,852,0.914,870,1.497,871,1.093,874,3.185,933,0.914,943,1.739,944,1.739,946,1.093,984,5.982,1084,1.497,1124,1.093,1174,0.914,1184,1.093,1241,2.146,1250,2.438,1251,0.914,1272,1.605,1273,1.093,1276,4.177,1349,0.914,1361,1.093,1364,3.873,1402,0.914,1411,1.093,1431,1.739,1498,0.914,1513,1.093,1519,3.515,1586,3.873,1606,1.093,1607,1.093,1656,0.802,1692,1.093,1693,1.093,1694,1.093,1695,1.093,1696,1.093,1697,1.093,1698,1.093,1699,1.093,1700,2.933,1701,4.772,1702,1.249,1703,1.249,1704,2.193,1705,7.58,1706,7.543,1707,7.543,1708,8.21,1709,8.21,1710,1.249,1711,1.249,1712,7.543,1713,1.249,1714,2.193,1715,1.249,1716,2.933,1717,2.193,1718,1.249,1719,2.193,1720,1.249,1721,2.193,1722,1.249,1723,2.193,1724,2.193,1725,1.249,1726,2.933,1727,2.193,1728,1.249,1729,2.193,1730,1.249,1731,2.193,1732,1.249,1733,2.193,1734,1.249,1735,1.249,1736,2.193,1737,1.249,1738,2.193,1739,2.193,1740,1.249,1741,2.933,1742,2.193,1743,1.249,1744,2.193,1745,1.249,1746,2.193,1747,1.249,1748,2.193,1749,1.249,1750,2.193,1751,2.193,1752,1.249,1753,2.193,1754,1.249,1755,2.933,1756,2.193,1757,1.249,1758,2.193,1759,1.249,1760,2.193,1761,1.249,1762,1.249,1763,2.193,1764,1.249,1765,2.193,1766,2.193,1767,1.249,1768,2.193,1769,1.249,1770,2.933,1771,2.193,1772,1.249,1773,2.193,1774,1.249,1775,2.193,1776,1.249,1777,2.193,1778,2.193,1779,1.249,1780,2.193,1781,1.249,1782,2.933,1783,2.193,1784,1.249,1785,2.193,1786,1.249,1787,2.193,1788,1.249,1789,1.249,1790,1.249,1791,1.249,1792,1.249,1793,1.249,1794,1.249,1795,1.249,1796,1.249]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":693,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1685,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0h:5m:0s",{"_index":1040,"title":{},"body":{"controllers/MailController.html":{}}}],["1",{"_index":464,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["1.0.0",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["1.0.17",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":1623,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["10.0.3",{"_index":1625,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":1628,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["10000",{"_index":791,"title":{},"body":{"controllers/FilesController.html":{}}}],["100000",{"_index":779,"title":{},"body":{"controllers/FilesController.html":{}}}],["100mb",{"_index":781,"title":{},"body":{"controllers/FilesController.html":{}}}],["1024",{"_index":780,"title":{},"body":{"controllers/FilesController.html":{}}}],["10mb",{"_index":792,"title":{},"body":{"controllers/FilesController.html":{}}}],["123",{"_index":129,"title":{},"body":{"injectables/AppService.html":{}}}],["123456",{"_index":553,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["13",{"_index":1681,"title":{},"body":{"overview.html":{}}}],["15t06:47:49.369z",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1682,"title":{},"body":{"overview.html":{}}}],["2",{"_index":536,"title":{"classes/Company-2.html":{}},"body":{"overview.html":{}}}],["2.1.3",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1631,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":1626,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1035,"title":{},"body":{"controllers/MailController.html":{}}}],["34",{"_index":1683,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1629,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["455",{"_index":130,"title":{},"body":{"injectables/AppService.html":{}}}],["5",{"_index":1013,"title":{},"body":{"controllers/MailController.html":{}}}],["5.4.0",{"_index":1630,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1038,"title":{},"body":{"controllers/MailController.html":{}}}],["6')@cron('0",{"_index":1012,"title":{},"body":{"controllers/MailController.html":{}}}],["6.9.3",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["60)@responsemessage('user",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["60s",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["647b5108a8a243e8191855b5",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":718,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["7.0.4",{"_index":1627,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["7.6.1",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":1624,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["96",{"_index":725,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["__v",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":816,"title":{},"body":{"injectables/FilesService.html":{},"injectables/MailService.html":{}}}],["adapter",{"_index":1096,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":711,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["addfiletypevalidator",{"_index":773,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":777,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":473,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":817,"title":{},"body":{"injectables/FilesService.html":{},"injectables/MailService.html":{}}}],["admin",{"_index":698,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["admin@dev.com",{"_index":552,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["admin@gmail.com",{"_index":716,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["admin_role",{"_index":676,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":712,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":721,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":548,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["aliases",{"_index":1691,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":730,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["api",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":587,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":540,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apitags",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('companies",{"_index":404,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('files",{"_index":767,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('jobs",{"_index":891,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mail",{"_index":1028,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('permissions",{"_index":1199,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resumes",{"_index":1292,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('roles",{"_index":1374,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('subscribers",{"_index":1432,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags('users",{"_index":1532,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1068,"title":{},"body":{"controllers/MailController.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":14,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":447,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":459,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["arguments",{"_index":956,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["array",{"_index":621,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"controllers/FilesController.html":{},"classes/History.html":{},"classes/Role.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["array'})@isnotempty({message",{"_index":619,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["array'})@validatenested()@type(undefined",{"_index":1479,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["async",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":131,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":942,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":926,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":994,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":39,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1661,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":18,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":1125,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["available",{"_index":1679,"title":{},"body":{"modules.html":{}}}],["await",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":1295,"title":{},"body":{"controllers/ResumesController.html":{}}}],["badrequestexception",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('refresh",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception(`email",{"_index":1585,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(`permission",{"_index":1221,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestexception(`resume",{"_index":1339,"title":{},"body":{"injectables/ResumesService.html":{}}}],["badrequestexception(`role",{"_index":1396,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestexception(`subscriber",{"_index":1459,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["based",{"_index":955,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["basename",{"_index":1170,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1577,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bla",{"_index":1071,"title":{},"body":{"controllers/MailController.html":{}}}],["body",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["body('status",{"_index":1303,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":535,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Role.html":{}}}],["boolean'})@isnotempty({message",{"_index":615,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["boolean(isinit",{"_index":686,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1144,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1677,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1675,"title":{},"body":{"modules.html":{}}}],["build",{"_index":784,"title":{},"body":{"controllers/FilesController.html":{},"controllers/MailController.html":{}}}],["bulk",{"_index":695,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["byte",{"_index":783,"title":{},"body":{"controllers/FilesController.html":{}}}],["báo",{"_index":1270,"title":{},"body":{"classes/Resume.html":{}}}],["c",{"_index":519,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["callhandler",{"_index":1236,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":927,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":932,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["catch",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["cb",{"_index":1158,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1161,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ch",{"_index":710,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["check",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["chuỗi",{"_index":524,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["chuỗi'})@isstring({each",{"_index":578,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["chạy",{"_index":1671,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Mail.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":471,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Mail.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["clear",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["client",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":424,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_exports",{"_index":426,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":425,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":649,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":650,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":800,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":801,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":901,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":902,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1075,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1076,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1206,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1207,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1306,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1307,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1381,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1382,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1383,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1444,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1445,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1546,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1548,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1547,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":126,"title":{},"body":{"injectables/AppService.html":{}}}],["companies",{"_index":370,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":428,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.controller,ts",{"_index":460,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["companies.module.ts",{"_index":451,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{}}}],["companies.service",{"_index":400,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":368,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":40,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":399,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":381,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"controllers/MailController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":402,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":555,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:11",{"_index":558,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:14",{"_index":559,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:5",{"_index":560,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:8",{"_index":557,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":432,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["companydocument",{"_index":446,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":596,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":438,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":429,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparesync",{"_index":1574,"title":{},"body":{"injectables/UsersService.html":{}}}],["compass",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["compay",{"_index":450,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{}}}],["config",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('mongodb_uri",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{}}}],["configservice.get('email_auth_pass",{"_index":1092,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_auth_user",{"_index":1091,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_host",{"_index":1089,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_preview",{"_index":1100,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["confirm",{"_index":1069,"title":{},"body":{"controllers/MailController.html":{}}}],["connection",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1153,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('called",{"_index":1034,"title":{},"body":{"controllers/MailController.html":{}}}],["console.log('directory",{"_index":1134,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('isexist",{"_index":968,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["console.log('user",{"_index":411,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["console.log(error",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(file",{"_index":793,"title":{},"body":{"controllers/FilesController.html":{}}}],["console.log(files",{"_index":787,"title":{},"body":{"controllers/FilesController.html":{}}}],["const",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":999,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":435,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":974,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":908,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmodel",{"_index":1212,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":406,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":929,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1314,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1388,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribermodel",{"_index":1450,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":665,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":1148,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["content",{"_index":1072,"title":{},"body":{"controllers/MailController.html":{}}}],["context",{"_index":935,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":949,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":948,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":951,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1248,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":405,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":648,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":768,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('health",{"_index":829,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('jobs",{"_index":892,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":1029,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1200,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1293,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1375,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1433,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1533,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["cookies",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["copy",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["cors",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["countpermission",{"_index":689,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":691,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":687,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1592,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":371,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":407,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":374,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":810,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":875,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createmaildto",{"_index":1102,"title":{},"body":{"injectables/MailService.html":{}}}],["create(createpermissiondto",{"_index":1187,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createroledto",{"_index":1365,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1415,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createusercvdto",{"_index":1279,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createuserdto",{"_index":1520,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":375,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1136,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":453,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":561,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":517,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmaildto",{"_index":581,"title":{"classes/CreateMailDto.html":{}},"body":{"classes/CreateMailDto.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/UpdateMailDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1110,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createmulteroptions1",{"_index":1122,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":584,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":593,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["createroledto",{"_index":610,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createsubscriberdto",{"_index":622,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createusercvdto",{"_index":609,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":545,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cron",{"_index":1026,"title":{},"body":{"controllers/MailController.html":{}}}],["cron(\"0",{"_index":1039,"title":{},"body":{"controllers/MailController.html":{}}}],["cron(cronexpression.every_30_seconds",{"_index":1032,"title":{},"body":{"controllers/MailController.html":{}}}],["cronexpression",{"_index":1027,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpage",{"_index":384,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["customize.ts",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["cài",{"_index":1664,"title":{},"body":{"index.html":{}}}],["câu",{"_index":1668,"title":{},"body":{"index.html":{}}}],["cần",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"classes/Resume.html":{}}}],["cập",{"_index":971,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["d",{"_index":1672,"title":{},"body":{"index.html":{}}}],["data",{"_index":732,"title":{},"body":{"injectables/DatabasesService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":645,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":652,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":647,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":643,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":41,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":646,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":481,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{}}}],["date(value",{"_index":532,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["date.now()}${extname",{"_index":1173,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["db",{"_index":830,"title":{},"body":{"controllers/HealthController.html":{}}}],["declarations",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decode",{"_index":410,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["decorator",{"_index":1531,"title":{},"body":{"controllers/UsersController.html":{}}}],["decorators",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":465,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["define",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["defined",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":390,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":883,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["deletedat",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletedby",{"_index":474,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["denied",{"_index":1152,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":30,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":475,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UserLoginDto.html":{},"properties.html":{}}}],["dest",{"_index":1123,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["destination",{"_index":1157,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dev",{"_index":1674,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1093,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1143,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["diskstorage",{"_index":1120,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["documentation",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":1541,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/create",{"_index":401,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":403,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dân",{"_index":723,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["dùng/ứng",{"_index":704,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["dạng",{"_index":526,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["dạng'})@isnotempty({message",{"_index":636,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["dần",{"_index":1335,"title":{},"body":{"injectables/ResumesService.html":{}}}],["dụng",{"_index":707,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["each",{"_index":525,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["eexist",{"_index":1140,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ejs",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["empty'})@isarray({message",{"_index":1478,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["empty'})@ismongoid({message",{"_index":601,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["empty'})@isnotempty({message",{"_index":625,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["enddate",{"_index":533,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["endpoint",{"_index":1297,"title":{},"body":{"controllers/ResumesController.html":{}}}],["enotdir",{"_index":1145,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":1111,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1114,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["err",{"_index":938,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["error.code",{"_index":1139,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["errorhttpstatuscode",{"_index":785,"title":{},"body":{"controllers/FilesController.html":{}}}],["example",{"_index":551,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["exception",{"_index":954,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["executioncontext",{"_index":933,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":1219,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["exists",{"_index":1137,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["expiresin",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":745,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":847,"title":{},"body":{"classes/History.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["extension",{"_index":1165,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1166,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":978,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":982,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f5",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["false",{"_index":984,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["fecth",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetch",{"_index":1586,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1333,"title":{},"body":{"injectables/ResumesService.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined",{"_index":748,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":763,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":563,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":794,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":764,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":750,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":736,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":803,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":762,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":734,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesinterceptor",{"_index":765,"title":{},"body":{"controllers/FilesController.html":{}}}],["filesmodule",{"_index":42,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":761,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":774,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":455,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":461,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":462,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1172,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["findall",{"_index":372,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@query(\"current",{"_index":414,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["findall(currentpage",{"_index":377,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyuser",{"_index":1313,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findbyuser(user",{"_index":1319,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findone",{"_index":373,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":418,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":385,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyusername",{"_index":1556,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":1562,"title":{},"body":{"injectables/UsersService.html":{}}}],["findusertoken",{"_index":1553,"title":{},"body":{"injectables/UsersService.html":{}}}],["folder",{"_index":1127,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["forbiddenexception",{"_index":939,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["forbiddenexception('bạn",{"_index":969,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["found",{"_index":1340,"title":{},"body":{"injectables/ResumesService.html":{}}}],["fs",{"_index":1119,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1132,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":700,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["function",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1657,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gen",{"_index":1126,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["gender",{"_index":549,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["gensaltsync",{"_index":1575,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1582,"title":{},"body":{"injectables/UsersService.html":{}}}],["get(':id",{"_index":417,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@public",{"_index":386,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["get(':id')@public()@responsemessage('fetch",{"_index":880,"title":{},"body":{"controllers/JobsController.html":{}}}],["get(':id')@responsemessage('fetch",{"_index":1191,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["get('account",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@public()@healthcheck",{"_index":823,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@public()@responsemessage('fetch",{"_index":379,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{}}}],["get()@public()@responsemessage('test",{"_index":1011,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@responsemessage('fetch",{"_index":1189,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["gethashpassword",{"_index":1554,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":120,"title":{},"body":{"injectables/AppService.html":{}}}],["getresumebyuser",{"_index":1277,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumebyuser(@user",{"_index":1298,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumebyuser(user",{"_index":1283,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getrootpath",{"_index":1109,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getting",{"_index":1659,"title":{"index.html":{}},"body":{}}],["getuserskills",{"_index":1414,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["getuserskills(@user",{"_index":1437,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(user",{"_index":1419,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["gian",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["giảm",{"_index":1334,"title":{},"body":{"injectables/ResumesService.html":{}}}],["giới",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["graph",{"_index":1678,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{}}}],["gán",{"_index":988,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["h",{"_index":708,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["handle",{"_index":1245,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["handlebars",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1082,"title":{},"body":{"modules/MailModule.html":{}}}],["handlegetaccount",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(@user",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(user",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(@req",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(@res",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(res",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(@req",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registeruserdto",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":928,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":936,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handletestemail",{"_index":1010,"title":{},"body":{"controllers/MailController.html":{}}}],["hashpass",{"_index":1565,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1587,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":1576,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":1583,"title":{},"body":{"injectables/UsersService.html":{}}}],["health",{"_index":822,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":834,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":825,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":826,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":820,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":43,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":127,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["hierarchy",{"_index":1147,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":836,"title":{"classes/History.html":{}},"body":{"classes/History.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["hoidanit@gmail.com",{"_index":724,"title":{},"body":{"injectables/DatabasesService.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":1088,"title":{},"body":{"modules/MailModule.html":{}}}],["html",{"_index":1070,"title":{},"body":{"controllers/MailController.html":{}}}],["http://localhost:8000/api/v1/auth/account",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["http://localhost:8000/api/v1/auth/login",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["httponly",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://docs.nestjs.com/pipes",{"_index":1579,"title":{},"body":{"injectables/UsersService.html":{}}}],["https://docs.nestjs.com/recipes/passport",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpstatus",{"_index":759,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":786,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydrateddocument",{"_index":495,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hạn",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["hỏi",{"_index":722,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["hợp",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["i'm",{"_index":715,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["id",{"_index":388,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["ignoreexpiration",{"_index":983,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1164,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1168,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image\\/jpeg|image\\/png|text\\/plain|application\\/pdf|application\\/msword|application\\/vnd.openxmlformats",{"_index":775,"title":{},"body":{"controllers/FilesController.html":{}}}],["implements",{"_index":680,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":118,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["information')@get('account",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["init",{"_index":731,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":677,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":115,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":445,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":449,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["injectmodel(job.name",{"_index":918,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["injectmodel(permission.name",{"_index":682,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1325,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":683,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subscriber.name",{"_index":1030,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":681,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(userm.name",{"_index":1580,"title":{},"body":{"injectables/UsersService.html":{}}}],["intercept",{"_index":1243,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1466,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":849,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":850,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["is_public_key",{"_index":943,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":944,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":534,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/Role.html":{},"injectables/RolesService.html":{}}}],["isarray",{"_index":508,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["isarray({message",{"_index":618,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["isboolean",{"_index":509,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["isboolean({message",{"_index":614,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["isdate",{"_index":510,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isdate({message",{"_index":568,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdeleted",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemail",{"_index":541,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["isexist",{"_index":963,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["isglobal",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":684,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ismongoid",{"_index":542,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty",{"_index":502,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty()@isemail",{"_index":1497,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["isnotempty({message",{"_index":556,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotemptyobject",{"_index":511,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":564,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["isnotin",{"_index":543,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnumber",{"_index":544,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isobject",{"_index":512,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ispublic",{"_index":946,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iss",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["isskippermission",{"_index":952,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isstring",{"_index":513,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1514,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isvalid",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidpassword",{"_index":1557,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":1564,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1142,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["item.company",{"_index":1055,"title":{},"body":{"controllers/MailController.html":{}}}],["item.name",{"_index":1054,"title":{},"body":{"controllers/MailController.html":{}}}],["item.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":1056,"title":{},"body":{"controllers/MailController.html":{}}}],["item.skills",{"_index":1057,"title":{},"body":{"controllers/MailController.html":{}}}],["iuser",{"_index":141,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["job",{"_index":604,"title":{"classes/Job.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"coverage.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["job.dto",{"_index":890,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":501,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:11",{"_index":503,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:13",{"_index":505,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:15",{"_index":504,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:21",{"_index":574,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:27",{"_index":579,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:34",{"_index":565,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:38",{"_index":576,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:41",{"_index":575,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:44",{"_index":572,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:47",{"_index":566,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:50",{"_index":573,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:55",{"_index":580,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:60",{"_index":569,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:64",{"_index":571,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.name",{"_index":906,"title":{},"body":{"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["jobdocument",{"_index":869,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":597,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":910,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["jobs",{"_index":874,"title":{},"body":{"controllers/JobsController.html":{},"controllers/MailController.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":904,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":889,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":870,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":872,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":44,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":888,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobwithmatchingskills",{"_index":1049,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.map(item",{"_index":1053,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills?.length",{"_index":1052,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":1080,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["join(__dirname",{"_index":1094,"title":{},"body":{"modules/MailModule.html":{}}}],["join(this.getrootpath",{"_index":1162,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jwt",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["jwt.strategy.ts",{"_index":409,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["jwt_access_token_secret",{"_index":986,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtauthguard",{"_index":924,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":981,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":252,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":1490,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["key",{"_index":996,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["keyword",{"_index":987,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["khai",{"_index":1269,"title":{},"body":{"classes/Resume.html":{}}}],["không",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ko",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["l",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["legend",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":529,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["license",{"_index":1688,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["list",{"_index":380,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["literal",{"_index":484,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["local",{"_index":995,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.guard",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["local.strategy.ts",{"_index":992,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["localauthguard",{"_index":178,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":253,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":530,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{}}}],["logger",{"_index":663,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":672,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["login",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login')@post('login",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuser",{"_index":882,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["loginuser._id",{"_index":1343,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["loginuser.email",{"_index":1344,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["logo",{"_index":476,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/Job.html":{}}}],["logout",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["loại",{"_index":1492,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["lòng",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["lần",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["lệnh",{"_index":1669,"title":{},"body":{"index.html":{}}}],["mail",{"_index":1006,"title":{"classes/Mail.html":{}},"body":{"classes/Mail.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"coverage.html":{}}}],["mail.controller",{"_index":1078,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.dto",{"_index":1017,"title":{},"body":{"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/UpdateMailDto.html":{}}}],["mail.dto.ts",{"_index":583,"title":{},"body":{"classes/CreateMailDto.html":{},"classes/UpdateMailDto.html":{},"coverage.html":{}}}],["mail.service",{"_index":1016,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":1008,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1079,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1086,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1019,"title":{},"body":{"controllers/MailController.html":{}}}],["mailmodule",{"_index":45,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":1015,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["male",{"_index":719,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1239,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1247,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":469,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["maxage",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":778,"title":{},"body":{"controllers/FilesController.html":{}}}],["maxsizel",{"_index":782,"title":{},"body":{"controllers/FilesController.html":{}}}],["message",{"_index":518,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":588,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":119,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["midleware",{"_index":1578,"title":{},"body":{"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1656,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":125,"title":{},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":27,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":29,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1021,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1083,"title":{},"body":{"modules/MailModule.html":{}}}],["mongo",{"_index":550,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["mongodb",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1271,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":498,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["mongoose.types.objectid.isvalid(_id",{"_index":1338,"title":{},"body":{"injectables/ResumesService.html":{}}}],["mongoosehealthindicator",{"_index":827,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":431,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot('mongodb+srv://ovu1024:o%40nh1024@cluster0.birnesc.mongodb.net",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expire",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get('jwt_refresh_expire",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1121,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":806,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":805,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":804,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":807,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1113,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1118,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multi",{"_index":753,"title":{},"body":{"controllers/FilesController.html":{}}}],["mảng",{"_index":523,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["mặc",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["n",{"_index":1673,"title":{},"body":{"index.html":{}}}],["name",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{}}}],["nestinterceptor",{"_index":1235,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":1020,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/cli",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":941,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":843,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":766,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":828,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["new",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newcv",{"_index":1326,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newcv?._id",{"_index":1329,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newcv?.createdat",{"_index":1330,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newjob",{"_index":919,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob._id",{"_index":921,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob?.createdat",{"_index":922,"title":{},"body":{"injectables/JobsService.html":{}}}],["newpermission",{"_index":1222,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission?._id",{"_index":1224,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission?.createdat",{"_index":1225,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newrole",{"_index":1397,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole?._id",{"_index":1399,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole?.createdat",{"_index":1400,"title":{},"body":{"injectables/RolesService.html":{}}}],["newsubscriber",{"_index":1460,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriber?._id",{"_index":1462,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriber?.createdat",{"_index":1463,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newuser",{"_index":1534,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["newuser._id",{"_index":1536,"title":{},"body":{"controllers/UsersController.html":{}}}],["newuser.createdat",{"_index":1537,"title":{},"body":{"controllers/UsersController.html":{}}}],["next",{"_index":1244,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":546,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["người",{"_index":703,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["nh",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["nice",{"_index":1067,"title":{},"body":{"controllers/MailController.html":{}}}],["nodemailer",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["normal",{"_index":726,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["normal_user",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1670,"title":{},"body":{"index.html":{}}}],["null",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":440,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["number'})@isnotempty({message",{"_index":633,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["nào",{"_index":1495,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["object",{"_index":486,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["objuser",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1237,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["officedocument.wordprocessingml.document",{"_index":776,"title":{},"body":{"controllers/FilesController.html":{}}}],["offset",{"_index":463,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["old",{"_index":1347,"title":{},"body":{"injectables/ResumesService.html":{}}}],["omittype",{"_index":1489,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1487,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":664,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["optional",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1097,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override",{"_index":1064,"title":{},"body":{"controllers/MailController.html":{}}}],["overview",{"_index":1680,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ovu",{"_index":1662,"title":{},"body":{"index.html":{},"properties.html":{}}}],["package",{"_index":1617,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginate",{"_index":382,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":878,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["param",{"_index":397,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":420,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["parameters",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":448,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1146,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":758,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":842,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["partialtype(createcompanydto",{"_index":1469,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1471,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1473,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createmaildto",{"_index":1475,"title":{},"body":{"classes/UpdateMailDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1477,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":848,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["partialtype(createroledto",{"_index":1482,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1484,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["pass",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":980,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":973,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":547,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":396,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":394,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":886,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch()@responsemessage('update",{"_index":1527,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch()@skipcheckpermission()@responsemessage('update",{"_index":1426,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["path",{"_index":1081,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1171,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1167,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1328,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":308,"title":{"classes/Permission.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.apipath",{"_index":966,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.dto",{"_index":1198,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":586,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":590,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:14",{"_index":591,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:5",{"_index":592,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:8",{"_index":589,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.method",{"_index":965,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":660,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":673,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":666,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1209,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find(permission",{"_index":964,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1197,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":655,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1185,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":46,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1196,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["phải",{"_index":522,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["pipe",{"_index":1246,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["plugin",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":1336,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":458,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["post",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post('by",{"_index":1284,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('login",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('skill",{"_index":1435,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('skill')@skipcheckpermission()@responsemessage('get",{"_index":1420,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('upload",{"_index":788,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload')@responsemessage('upload",{"_index":746,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('uploadmultifile",{"_index":769,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":876,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1099,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1131,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["project",{"_index":1687,"title":{},"body":{"properties.html":{}}}],["projection",{"_index":457,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["promise",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["prop",{"_index":482,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({required",{"_index":479,"title":{},"body":{"classes/Company.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["prop({type",{"_index":485,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({unique",{"_index":1355,"title":{},"body":{"classes/Role.html":{},"classes/Subscriber.html":{}}}],["properties",{"_index":276,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provider",{"_index":124,"title":{},"body":{"injectables/AppService.html":{}}}],["providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@apibody({type",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@get(':id')@responsemessage('fetch",{"_index":1523,"title":{},"body":{"controllers/UsersController.html":{}}}],["public()@post('uploadmultifile')@responsemessage('upload",{"_index":752,"title":{},"body":{"controllers/FilesController.html":{}}}],["public()@responsemessage('get",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('register",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1163,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1345,"title":{},"body":{"injectables/ResumesService.html":{}}}],["qs",{"_index":378,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":528,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["query",{"_index":398,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query(\"pagesize",{"_index":415,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["query('current",{"_index":1538,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":1539,"title":{},"body":{"controllers/UsersController.html":{}}}],["quyền",{"_index":701,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["receiver",{"_index":1073,"title":{},"body":{"controllers/MailController.html":{}}}],["recursive",{"_index":1133,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1253,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["refesh",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["reflect",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":930,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["register(registeruser",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registeruser",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registeruserdto",{"_index":171,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["remove",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":422,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(_id",{"_index":914,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["remove(id",{"_index":389,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":819,"title":{},"body":{"injectables/FilesService.html":{},"injectables/MailService.html":{}}}],["render",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["req",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req.params.id",{"_index":1542,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.user",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["req?.headers?.folder_type",{"_index":1159,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refresh_token",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":959,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route?.path",{"_index":961,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1141,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["required",{"_index":497,"title":{},"body":{"classes/Company.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["res",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["res.clearcookie('key1",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.clearcookie('refresh_token",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.cookie('refresh_token",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":154,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response_message",{"_index":1241,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"get",{"_index":1436,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["responsemessage(\"test",{"_index":1037,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage('create",{"_index":893,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('delete",{"_index":899,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetch",{"_index":413,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('get",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResumesController.html":{}}}],["responsemessage('logout",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('update",{"_index":897,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('upload",{"_index":770,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('user",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1250,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":845,"title":{},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["resume.dto.ts",{"_index":595,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["resume.dto.ts:10",{"_index":608,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:13",{"_index":607,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["resume.dto.ts:16",{"_index":606,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:18",{"_index":838,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:20",{"_index":602,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:21",{"_index":839,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:24",{"_index":605,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:26",{"_index":841,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:29",{"_index":631,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:32",{"_index":629,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:34",{"_index":1480,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:35",{"_index":630,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:6",{"_index":603,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:9",{"_index":1496,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["resume.name",{"_index":1311,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1267,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1316,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1276,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1309,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1291,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1272,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1274,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":47,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1290,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":408,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["returns",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["roldservice",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["role",{"_index":319,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1373,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":612,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":616,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:17",{"_index":620,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:6",{"_index":617,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:9",{"_index":613,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":661,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":674,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":667,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":1364,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1385,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.module.ts",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{}}}],["roles.service",{"_index":1372,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":657,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1362,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["rolesevice",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{}}}],["rolesmodule",{"_index":48,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":188,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["root",{"_index":1128,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["route",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["run",{"_index":1130,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["rxjs",{"_index":1238,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1240,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["s",{"_index":706,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["salary",{"_index":527,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"controllers/MailController.html":{}}}],["salt",{"_index":1581,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1149,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":679,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["sat:6",{"_index":1043,"title":{},"body":{"controllers/MailController.html":{}}}],["save",{"_index":1154,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["schedulemodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":433,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":494,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":499,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":871,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1184,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1273,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1361,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1411,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1513,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":430,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schema",{"_index":905,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":1210,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schema",{"_index":1310,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1386,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/subscriber.schema",{"_index":1448,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemas/user.schema",{"_index":1551,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["seconds",{"_index":1036,"title":{},"body":{"controllers/MailController.html":{}}}],["secret",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":985,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1090,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1337,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["server",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["setmetadata(is_public_key",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signoptions",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":747,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":470,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skills",{"_index":521,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Job.html":{},"controllers/MailController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["skipcheckpermission",{"_index":1431,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["soft",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":436,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":456,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMailDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src",{"_index":1129,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/.../company.schema.ts",{"_index":1692,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1693,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1694,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1695,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1696,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1697,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1698,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":117,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":122,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:45",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:54",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:61",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:151",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:40",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:77",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:85",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:93",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt.guard.ts",{"_index":925,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.guard.ts:15",{"_index":931,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/auth/jwt.guard.ts:20",{"_index":934,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/auth/jwt.guard.ts:31",{"_index":937,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/auth/local.guard.ts",{"_index":993,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":972,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:12",{"_index":975,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:25",{"_index":977,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":998,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:13",{"_index":1002,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:7",{"_index":1000,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":369,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:16",{"_index":376,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:25",{"_index":383,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:33",{"_index":387,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:38",{"_index":395,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:46",{"_index":391,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":427,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":434,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:14",{"_index":437,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:20",{"_index":439,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:31",{"_index":441,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:64",{"_index":442,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:71",{"_index":444,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:84",{"_index":443,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":554,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1468,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":1266,"title":{},"body":{"classes/Resume.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":472,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:12",{"_index":480,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:15",{"_index":489,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:18",{"_index":490,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:21",{"_index":487,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:26",{"_index":493,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:31",{"_index":488,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:37",{"_index":483,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:40",{"_index":492,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:9",{"_index":491,"title":{},"body":{"classes/Company.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1233,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:21",{"_index":1465,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:23",{"_index":1467,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":644,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":651,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":662,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:13",{"_index":669,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:30",{"_index":671,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1395,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1606,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/decorator/customize.ts",{"_index":1607,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":562,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1470,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":733,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":735,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:19",{"_index":754,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:38",{"_index":749,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:57",{"_index":739,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:62",{"_index":740,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:67",{"_index":743,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:72",{"_index":741,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":802,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":809,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":812,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":813,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":815,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":814,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":811,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1108,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:16",{"_index":1117,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:19",{"_index":1115,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:44",{"_index":1112,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/health/health.controller.ts",{"_index":821,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:14",{"_index":824,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":833,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":500,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1472,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":873,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:18",{"_index":877,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:25",{"_index":879,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:34",{"_index":881,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:40",{"_index":887,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:49",{"_index":884,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":903,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":907,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:12",{"_index":909,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:18",{"_index":911,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:33",{"_index":912,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:65",{"_index":913,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:75",{"_index":917,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:91",{"_index":915,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":1025,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":852,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:12",{"_index":865,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:15",{"_index":853,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:22",{"_index":864,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:25",{"_index":863,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:28",{"_index":860,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:31",{"_index":857,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:34",{"_index":861,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:37",{"_index":866,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:39",{"_index":858,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:42",{"_index":859,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:45",{"_index":855,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:50",{"_index":868,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:55",{"_index":856,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:61",{"_index":854,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:64",{"_index":867,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:9",{"_index":862,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/dto/create",{"_index":582,"title":{},"body":{"classes/CreateMailDto.html":{},"coverage.html":{}}}],["src/mail/dto/update",{"_index":1474,"title":{},"body":{"classes/UpdateMailDto.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts",{"_index":1009,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:39",{"_index":1014,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":1077,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1101,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:11",{"_index":1104,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:15",{"_index":1105,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:19",{"_index":1107,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:23",{"_index":1106,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:7",{"_index":1103,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/schemas/mail.schema.ts",{"_index":1007,"title":{},"body":{"classes/Mail.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1610,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":585,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1476,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1186,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:17",{"_index":1188,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:23",{"_index":1190,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:31",{"_index":1192,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:37",{"_index":1195,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:44",{"_index":1193,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1208,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1211,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:12",{"_index":1213,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:17",{"_index":1214,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:37",{"_index":1215,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:67",{"_index":1216,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:74",{"_index":1218,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:89",{"_index":1217,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":656,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":1174,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:12",{"_index":1175,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:15",{"_index":1179,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:18",{"_index":1180,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:21",{"_index":1177,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:26",{"_index":1183,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:31",{"_index":1178,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:37",{"_index":1176,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:40",{"_index":1182,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:9",{"_index":1181,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":594,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":837,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1275,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:17",{"_index":1280,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:23",{"_index":1286,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:29",{"_index":1281,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:37",{"_index":1282,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:43",{"_index":1289,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:49",{"_index":1287,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1308,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1312,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:12",{"_index":1315,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:120",{"_index":1322,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:17",{"_index":1317,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:41",{"_index":1318,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:71",{"_index":1321,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:78",{"_index":1320,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:94",{"_index":1324,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1251,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:11",{"_index":1258,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:14",{"_index":1265,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:17",{"_index":1264,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1261,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:23",{"_index":1254,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:26",{"_index":1260,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:29",{"_index":1259,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:39",{"_index":1256,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:44",{"_index":1263,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:49",{"_index":1257,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:55",{"_index":1255,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:58",{"_index":1262,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":611,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1481,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1363,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:18",{"_index":1366,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:24",{"_index":1367,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:32",{"_index":1368,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:38",{"_index":1371,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:45",{"_index":1369,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1384,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1387,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:13",{"_index":1389,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:18",{"_index":1390,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:38",{"_index":1391,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:68",{"_index":1392,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:76",{"_index":1394,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:99",{"_index":1393,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema",{"_index":658,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1349,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:10",{"_index":1356,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:13",{"_index":1353,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:16",{"_index":1354,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:20",{"_index":1357,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:23",{"_index":1351,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:28",{"_index":1359,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:33",{"_index":1352,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:39",{"_index":1350,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:42",{"_index":1358,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":623,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1483,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schema",{"_index":1024,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts",{"_index":1402,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:12",{"_index":1406,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:15",{"_index":1408,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:18",{"_index":1404,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:23",{"_index":1410,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:28",{"_index":1405,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:34",{"_index":1403,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:37",{"_index":1409,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:9",{"_index":1407,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1413,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:17",{"_index":1416,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:25",{"_index":1422,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:32",{"_index":1417,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:40",{"_index":1418,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:47",{"_index":1427,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:54",{"_index":1423,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1446,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1449,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:103",{"_index":1456,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:12",{"_index":1451,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:17",{"_index":1452,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:37",{"_index":1453,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:67",{"_index":1454,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:74",{"_index":1455,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:82",{"_index":1457,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1486,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":654,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1498,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":1507,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":1505,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":1508,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":1500,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":1506,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":1499,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:28",{"_index":1501,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:34",{"_index":1510,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:37",{"_index":1509,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:40",{"_index":1503,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:45",{"_index":1512,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:50",{"_index":1504,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:56",{"_index":1502,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:59",{"_index":1511,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1518,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:18",{"_index":1521,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:30",{"_index":1522,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:40",{"_index":1524,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":1528,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":1525,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/users.interface.ts",{"_index":851,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1549,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1552,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:113",{"_index":1561,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:123",{"_index":1563,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:130",{"_index":1566,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:134",{"_index":1569,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:153",{"_index":1568,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":1558,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:177",{"_index":1572,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:184",{"_index":1570,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":1571,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:32",{"_index":1567,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:57",{"_index":1559,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:83",{"_index":1560,"title":{},"body":{"injectables/UsersService.html":{}}}],["startdate",{"_index":531,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["started",{"_index":1660,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":598,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"controllers/PermissionsController.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":1234,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["steps",{"_index":1663,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1156,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":979,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1098,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":1065,"title":{},"body":{"controllers/MailController.html":{}}}],["subs",{"_index":1046,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.email",{"_index":1060,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.name",{"_index":1074,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.skills",{"_index":1048,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriber",{"_index":1022,"title":{"classes/Subscriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber's",{"_index":1421,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscriber.dto",{"_index":1430,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":624,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:13",{"_index":628,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:5",{"_index":627,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:9",{"_index":626,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1085,"title":{},"body":{"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscriberdocument",{"_index":1023,"title":{},"body":{"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":1031,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":1044,"title":{},"body":{"controllers/MailController.html":{},"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1447,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1429,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1084,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1412,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":49,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1428,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subsskills",{"_index":1047,"title":{},"body":{"controllers/MailController.html":{}}}],["successfully",{"_index":1135,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sun:0",{"_index":1042,"title":{},"body":{"controllers/MailController.html":{}}}],["sunday",{"_index":1041,"title":{},"body":{"controllers/MailController.html":{}}}],["super",{"_index":945,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":950,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1062,"title":{},"body":{"controllers/MailController.html":{},"modules.html":{}}}],["svg",{"_index":1676,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1138,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sống",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":1665,"title":{},"body":{"index.html":{}}}],["table",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["targetdirectory",{"_index":1116,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":960,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.startswith('/api/v1/auth",{"_index":967,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":958,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["team",{"_index":1063,"title":{},"body":{"controllers/MailController.html":{}}}],["temp",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1058,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1095,"title":{},"body":{"modules/MailModule.html":{}}}],["terminusmodule",{"_index":835,"title":{},"body":{"modules/HealthModule.html":{}}}],["testcron",{"_index":1033,"title":{},"body":{"controllers/MailController.html":{}}}],["th",{"_index":699,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["theo",{"_index":1332,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.authservice.login(req.user",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(res",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1003,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":412,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+currentpage",{"_index":416,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":419,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":423,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":421,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel.create",{"_index":452,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":467,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get(\"should_init",{"_index":685,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get('jwt_refresh_token_secret",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createrefreshtoken(payload",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":832,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1160,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":795,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":796,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":799,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":798,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.gethashpassword(password",{"_index":1588,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":831,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jobmodel.create",{"_index":920,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1050,"title":{},"body":{"controllers/MailController.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":923,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":894,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(+currentpage",{"_index":895,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":896,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":900,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":898,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":729,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.mailerservice.sendmail",{"_index":1059,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel.count",{"_index":690,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1223,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1226,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select(\"_id",{"_index":696,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findone",{"_index":1220,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":694,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1201,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(+currentpage",{"_index":1202,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1203,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1205,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1204,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1249,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":947,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_permission",{"_index":953,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel.create",{"_index":1327,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1331,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1348,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1342,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createusercvdto",{"_index":1294,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+currentpage",{"_index":1300,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findbyuser(user",{"_index":1299,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1301,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1305,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.updatestatus(id",{"_index":1304,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.roldservice.findone(user.role._id",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.rolemodel.count",{"_index":692,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1398,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1401,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":713,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":697,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.roleservice.findone(userrole._id",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.roleservice.findone(userrole._id)).toobject",{"_index":991,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1376,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(+currentpage",{"_index":1377,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1378,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.remove(id",{"_index":1380,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1379,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribermodel.create",{"_index":1461,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":1045,"title":{},"body":{"controllers/MailController.html":{}}}],["this.subscribermodel.find(filter)).length",{"_index":1464,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone",{"_index":1458,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1434,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(+currentpage",{"_index":1439,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1440,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getuserskills(user",{"_index":1438,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1443,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1442,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel.count",{"_index":688,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1589,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1590,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1584,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":714,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.updateone",{"_index":1591,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword(this.configservice.get(\"init_password",{"_index":717,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1535,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1540,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1543,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyusername(username",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findusertoken(refreshtoken",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword(pass",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(registeruser",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1545,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1544,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttle",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttle(3",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thuộc",{"_index":1493,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["thêm",{"_index":989,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ResumesService.html":{}}}],["thống",{"_index":709,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["thời",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["thừa",{"_index":1491,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["timestamps",{"_index":496,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["todo",{"_index":1051,"title":{},"body":{"controllers/MailController.html":{}}}],["token",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token')@get('refresh",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["totalitems",{"_index":466,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":468,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["transform",{"_index":506,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["transformer",{"_index":507,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1242,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1087,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["truy",{"_index":970,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["truyền",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["try",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["trying",{"_index":1151,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["trùng",{"_index":1296,"title":{},"body":{"controllers/ResumesController.html":{}}}],["trống",{"_index":520,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["trống'})@isarray({message",{"_index":577,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["trống'})@isboolean({message",{"_index":570,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["trống'})@ismongoid({message",{"_index":641,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["trống'})@transform",{"_index":567,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["ttl",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1690,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":844,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateMailDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["tính",{"_index":1494,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["unauthorizedexception",{"_index":940,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(\"invalid",{"_index":1004,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('token",{"_index":957,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["undefined",{"_index":1252,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unique",{"_index":1360,"title":{},"body":{"classes/Role.html":{},"classes/Subscriber.html":{}}}],["unknown",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1689,"title":{},"body":{"properties.html":{}}}],["update",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1441,"title":{},"body":{"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":797,"title":{},"body":{"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["update(_id",{"_index":916,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["update(id",{"_index":392,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["update(updatesubscriberdto",{"_index":1424,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1526,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecompanydto",{"_index":393,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updated",{"_index":1341,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updatedat",{"_index":477,"title":{},"body":{"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":478,"title":{"classes/UpdatedBy.html":{}},"body":{"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatefiledto",{"_index":742,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":885,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatemaildto",{"_index":1018,"title":{"classes/UpdateMailDto.html":{}},"body":{"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/UpdateMailDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1194,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":846,"title":{"classes/UpdateResumeDto.html":{}},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1370,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":818,"title":{},"body":{"injectables/FilesService.html":{},"injectables/MailService.html":{}}}],["updatestatus",{"_index":1278,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["updatestatus(@param('id",{"_index":1302,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatestatus(_id",{"_index":1323,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updatestatus(id",{"_index":1288,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatesubscriberdto",{"_index":1425,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1485,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateusertoken",{"_index":1555,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1124,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["uploaded",{"_index":1155,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["uploadedfile",{"_index":757,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadedfiles",{"_index":760,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":737,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(@uploadedfile",{"_index":790,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":744,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadmultifile",{"_index":738,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadmultifile(@uploadedfiles",{"_index":772,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadmultifile(files",{"_index":751,"title":{},"body":{"controllers/FilesController.html":{}}}],["uri",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":599,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{}}}],["use",{"_index":1268,"title":{},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["useclass",{"_index":808,"title":{},"body":{"modules/FilesModule.html":{}}}],["usefactory",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerguard",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":756,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":789,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(filesinterceptor('files",{"_index":771,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":144,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@post('logout",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@post('register",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@responsemessage('get",{"_index":1285,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user's",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["user._id",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["user.dto",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":537,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":1488,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":539,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:18",{"_index":639,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":637,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":640,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:29",{"_index":634,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:32",{"_index":638,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:35",{"_index":632,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:39",{"_index":642,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":635,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":1231,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:56",{"_index":1229,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:59",{"_index":1232,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:62",{"_index":1228,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:65",{"_index":1230,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:68",{"_index":1227,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:75",{"_index":1516,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:82",{"_index":1515,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:9",{"_index":538,"title":{},"body":{"classes/Company-2.html":{}}}],["user.email",{"_index":454,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["user.name",{"_index":659,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?._id",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.createdat",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.permissions",{"_index":962,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user@gmail.com",{"_index":727,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_role",{"_index":678,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":675,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":600,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userlogindto",{"_index":183,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@useguards(localauthguard)@useguards(throttlerguard)@throttle(3",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["userm",{"_index":1573,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":670,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["username/password",{"_index":1005,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrole",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":728,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":1519,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1550,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1530,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1529,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":653,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1517,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":668,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":50,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":282,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["v",{"_index":702,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/UpdateUserDto.html":{}}}],["validate",{"_index":516,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["validate(payload",{"_index":976,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1001,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":514,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["validatenested()@isnotempty()@type(undefined",{"_index":840,"title":{},"body":{"classes/History.html":{}}}],["validateuser",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":515,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1699,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1684,"title":{},"body":{"properties.html":{}}}],["vietnam",{"_index":720,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viên",{"_index":705,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viện",{"_index":1666,"title":{},"body":{"index.html":{}}}],["void",{"_index":755,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["vui",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["vulethuyoanh@gmail.com",{"_index":1061,"title":{},"body":{"controllers/MailController.html":{}}}],["vào",{"_index":990,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ResumesService.html":{}}}],["với",{"_index":1667,"title":{},"body":{"index.html":{}}}],["website",{"_index":1686,"title":{},"body":{"properties.html":{}}}],["welcome",{"_index":1066,"title":{},"body":{"controllers/MailController.html":{}}}],["without",{"_index":1169,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["word",{"_index":997,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["world",{"_index":128,"title":{},"body":{"injectables/AppService.html":{}}}],["y",{"_index":1346,"title":{},"body":{"injectables/ResumesService.html":{}}}],["you're",{"_index":1150,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["zoom",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get, Post, Render, Request, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthService } from './auth/auth.service';\n\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly configService: ConfigService,\n    private authService: AuthService\n  ) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n  ////copy connection string in mongoDB compass \n  imports: [\n    //MongooseModule.forRoot('mongodb+srv://ovu1024:O%40nh1024@cluster0.birnesc.mongodb.net/'),\n    ThrottlerModule.forRoot({\n      ttl: 60, //thời gian sống mặc định 60s\n      limit: 10, //giới hạn 10 lần\n    }),\n    ScheduleModule.forRoot(),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (config: ConfigService) => ({\n        uri: config.get('MONGODB_URI'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        }\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true\n    }),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n    HealthModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable() //provider\nexport class AppService {\n  getHello(): string {\n    //model: code\n    return 'Hello World! 123 455';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGetAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get user information')@Get('account')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ApiBody({type: UserLoginDto})@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@Throttle(3, 60)@ResponseMessage('User Login')@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(res: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Logout User')@Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(request: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Get User by refresh token')@Get('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegister(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Register a new user')@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Render, Req, Res, UseGuards } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './local.guard';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { RegisterUserDto, UserLoginDto } from 'src/users/dto/create-user.dto';\nimport { Request, Response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { Throttle, ThrottlerGuard } from '@nestjs/throttler';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('auth')\n@Controller('auth') // route /auth\nexport class AuthController {\n    constructor(\n        private authService: AuthService,\n        private roldService: RolesService\n    ) { }\n\n    //return token when user login, http://localhost:8000/api/v1/auth/login\n\n    @Public() // define at customize.ts to ignore JWT\n    @ApiBody({ type: UserLoginDto, })\n    @UseGuards(LocalAuthGuard)  //Passport Guard: https://docs.nestjs.com/recipes/passport\n    @UseGuards(ThrottlerGuard)\n    @Throttle(3, 60)\n    @ResponseMessage('User Login')\n    @Post('login')\n    handleLogin(@Req() req, @Res({ passthrough: true }) res: Response) {\n        return this.authService.login(req.user, res);\n    }\n\n    //Register account public: ko cần truyền token\n    @Public()\n    @ResponseMessage('Register a new user')\n    @Post('register')\n    handleRegister(@Body() registerUserDto: RegisterUserDto) {\n        return this.authService.register(registerUserDto);\n    }\n\n    //api Get Account (F5 Refresh at client) : http://localhost:8000/api/v1/auth/account\n    @ResponseMessage('Get user information')\n    @Get('account')\n    async handleGetAccount(@User() user: IUser) { //req.user\n        const temp = await this.roldService.findOne(user.role._id) as any;\n        user.permissions = temp.permissions;\n        return { user }\n    }\n\n    @Public()\n    @ResponseMessage('Get User by refresh token')\n    @Get('refresh')\n    handleRefreshToken(@Req() request: Request, @Res({ passthrough: true }) res: Response) {\n        const refreshToken: string = request.cookies['refresh_token'];\n        return this.authService.processNewToken(refreshToken, res);\n    }\n\n    @ResponseMessage('Logout User')\n    @Post('logout')\n    handleLogout(@Res({ passthrough: true }) res: Response, @User() user: IUser) {\n        return this.authService.logout(res, user);\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { RolesModule } from 'src/roles/roles.module';\n\n@Module({\n  imports: [\n    RolesModule, //need to export RoleSevice at roles.module.ts\n    UsersModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE')) / 1000\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController],\n\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                logout\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: IUser, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUser: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUser\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:93\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport ms from 'ms';\nimport { RolesService } from 'src/roles/roles.service';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private usersService: UsersService,\n        private jwtService: JwtService,\n        private configService: ConfigService,\n        private roleService: RolesService\n    ) { }\n\n    async validateUser(username: string, pass: string): Promise {\n        const user = await this.usersService.findOneByUsername(username);\n        if (user) {\n            const isValid = this.usersService.isValidPassword(pass, user.password);\n\n            if (isValid) {\n                //check permission user\n                const userRole = user.role as unknown as { _id: string; name: string; }\n                const temp = await this.roleService.findOne(userRole._id);\n\n                const objUser = {\n                    ...user.toObject(),\n                    permissions: temp?.permissions ?? []\n                }\n                return objUser;\n            }\n        }\n        return null;\n    }\n\n    async login(user: IUser, res: Response) {\n        const { _id, name, email, role, permissions } = user;\n        const payload = {\n            sub: \"token login\",\n            iss: \"from server\",\n            _id,\n            name,\n            email,\n            role\n        };\n        const refresh_token = this.createRefreshToken(payload);\n\n        //update user with refresh token\n        await this.usersService.updateUserToken(refresh_token, _id);\n        //clear cookie\n        //res.clearCookie('key1');\n\n        //set refresh token cookie\n        res.cookie('refresh_token', refresh_token, {\n            httpOnly: true,\n            maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE'))\n        });\n\n        return {\n            access_token: this.jwtService.sign(payload),\n            //refresh_token: this.createRefreshToken(payload),\n            user: {\n                _id,\n                name,\n                email,\n                role,\n                permissions\n            }\n        };\n\n    }\n\n    async register(registerUser: RegisterUserDto): Promise {\n        const user = await this.usersService.register(registerUser);\n        return {\n            _id: user?._id, //? case user is null\n            createdAt: user?.createdAt,\n        };\n    }\n\n    createRefreshToken = (payload: any) => {\n        const refresh_token = this.jwtService.sign(payload, {\n            secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n            expiresIn: ms(this.configService.get('JWT_REFRESH_EXPIRE')) / 1000\n        });\n        return refresh_token;\n    }\n\n    processNewToken = async (refreshToken: string, res: Response) => {\n\n        try {\n            this.jwtService.verify(refreshToken, {\n                secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET')\n            })\n\n            let user = await this.usersService.findUserToken(refreshToken);\n            if (user) {\n                //update refesh token\n                const { _id, name, email, role } = user;\n                const payload = {\n                    sub: \"token refresh\",\n                    iss: \"from server\",\n                    _id,\n                    name,\n                    email,\n                    role\n                };\n                const refresh_token = this.createRefreshToken(payload);\n\n                //update user with refresh token\n                await this.usersService.updateUserToken(refresh_token, _id.toString());\n\n                //fecth user's role\n                const userRole = user.role as unknown as { _id: string; name: string }\n                const temp = await this.roleService.findOne(userRole._id);\n\n                //clear cookie\n                res.clearCookie('refresh_token');\n\n                //set refresh token cookie\n                res.cookie('refresh_token', refresh_token, {\n                    httpOnly: true,\n                    maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE'))\n                });\n\n                return {\n                    access_token: this.jwtService.sign(payload),\n                    user: {\n                        _id,\n                        name,\n                        email,\n                        role,\n                        permissions: temp?.permissions ?? []\n                    }\n                };\n\n            } else {\n                throw new BadRequestException('Refresh token không hợp lệ, vui lòng login.')\n            }\n\n        } catch (error) {\n            console.log(error);\n            throw new BadRequestException('Refresh token không hợp lệ, vui lòng login.')\n        }\n    }\n\n    logout = async (res: Response, user: IUser) => {\n        //Update refresh_token === null (empty)\n        await this.usersService.updateUserToken('', user._id);\n        //Remove refresh_token ở cookies (remove cookies)\n        res.clearCookie('refresh_token');\n        return 'ok';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch list company with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('companies')\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) { }\n\n  @Post()\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {//user was returned from 'jwt.strategy.ts' after decode\n    //console.log('user info:', user) \n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n\n  @Get()\n  @Public()\n  @ResponseMessage('Fetch list company with paginate')\n  findAll(@Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string) {\n    return this.companiesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: IUser) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_CompaniesModule_exports\n\n\n\n\nCompaniesService \n\nCompaniesService \n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesService  -->\n\nCompaniesModule->CompaniesService \n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    {\n      name: Company.name,\n      schema: CompanySchema\n    }\n  ])],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n  exports: [CompaniesService],\n})\nexport class CompaniesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\n\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n\n@Injectable()\nexport class CompaniesService {\n\n  constructor(\n    @InjectModel(Company.name) // need to import Compay in companies.module.ts\n    private companyModel: SoftDeleteModel) { }\n\n  create(createCompanyDto: CreateCompanyDto, user: IUser) {\n    return this.companyModel.create(\n      {\n        ...createCompanyDto,\n        createdBy: {\n          _id: user._id,\n          email: user.email\n        }\n      });\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n\n    const { filter, sort, projection, population } = aqp(qs);\n\n    //params in query string (companies.controller,ts >> findAll )\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (currentPage - 1) * (limit);\n    let defaultLimit = limit ? limit : 10;\n    const totalItems = (await this.companyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    let size = (totalItems - offset) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Company {\n    @Prop({ required: true })\n    name: string;\n\n    @Prop({ required: true })\n    address: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    logo: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n    IsArray, IsBoolean, IsDate, IsNotEmpty, IsNotEmptyObject, IsObject, IsString,\n    ValidateNested\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\n//create class to validate 1 object\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n    @IsNotEmpty()\n    name: string;\n    @IsNotEmpty()\n    logo: string;\n\n}\n\nexport class CreateJobDto {\n    @IsNotEmpty({ message: 'name không được để trống' })\n    name: string;\n\n\n    @IsNotEmpty({ message: 'skills không được để trống' })\n    @IsArray({ message: 'skills phải là mảng chuỗi' })\n    @IsString({ each: true, message: 'skills có định dạng string' })\n    skills: string[];\n\n    //validate 1 object\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n\n\n    @IsNotEmpty({ message: 'salary không được để trống' })\n    salary: number;\n\n    @IsNotEmpty({ message: 'quantity không được để trống' })\n    quantity: number;\n\n    @IsNotEmpty({ message: 'level không được để trống' })\n    level: string;\n\n    @IsNotEmpty({ message: 'description không được để trống' })\n    description: string;\n\n    @IsNotEmpty({ message: 'location không được để trống' })\n    location: string;\n\n    @IsNotEmpty({ message: 'startDate không được để trống' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'startDate có định dạng Date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: 'endDate không được để trống' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'endDate có định dạng Date' })\n    endDate: Date;\n\n    @IsNotEmpty({ message: 'isActive không được để trống' })\n    @IsBoolean({ message: 'isActive có định dạng boolean' })\n    isActive: boolean;\n\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsNotIn, IsNumber, IsObject, IsString, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\n//create class to validate 1 object\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n\n}\n\nexport class CreateUserDto {\n    @IsNotEmpty({ message: 'name không được để trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được để trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống' })\n    password: string;\n\n    @IsNumber({}, { message: 'age phải là number' })\n    @IsNotEmpty({ message: 'age không được để trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'gender không được để trống' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'address không được để trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'role không được để trống' })\n    @IsMongoId({ message: 'role có định dạng mongo id' })\n    role: mongoose.Schema.Types.ObjectId;\n\n    //validate 1 object\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\n\nexport class RegisterUserDto {\n    @IsNotEmpty({ message: 'name không được để trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được để trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống' })\n    password: string;\n\n    @IsNotEmpty({ message: 'age không được để trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'gender không được để trống' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'address không được để trống' })\n    address: string;\n}\n\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'admin@dev.com', description: 'username' })\n    readonly username: string;\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        example: '123456',\n        description: 'password',\n    })\n    readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'logo không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateCompanyDto {\n    @IsNotEmpty({ message: 'Name không được để trống' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Address không được để trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Description không được để trống' })\n    description: string;\n\n    @IsNotEmpty({ message: 'logo không được để trống' })\n    logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'endDate không được để trống'})@Transform( => )@IsDate({message: 'endDate có định dạng Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive không được để trống'})@IsBoolean({message: 'isActive có định dạng boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'level không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'location không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'quantity không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'salary không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'skills không được để trống'})@IsArray({message: 'skills phải là mảng chuỗi'})@IsString({each: true, message: 'skills có định dạng string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'startDate không được để trống'})@Transform( => )@IsDate({message: 'startDate có định dạng Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n    IsArray, IsBoolean, IsDate, IsNotEmpty, IsNotEmptyObject, IsObject, IsString,\n    ValidateNested\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\n//create class to validate 1 object\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n    @IsNotEmpty()\n    name: string;\n    @IsNotEmpty()\n    logo: string;\n\n}\n\nexport class CreateJobDto {\n    @IsNotEmpty({ message: 'name không được để trống' })\n    name: string;\n\n\n    @IsNotEmpty({ message: 'skills không được để trống' })\n    @IsArray({ message: 'skills phải là mảng chuỗi' })\n    @IsString({ each: true, message: 'skills có định dạng string' })\n    skills: string[];\n\n    //validate 1 object\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n\n\n    @IsNotEmpty({ message: 'salary không được để trống' })\n    salary: number;\n\n    @IsNotEmpty({ message: 'quantity không được để trống' })\n    quantity: number;\n\n    @IsNotEmpty({ message: 'level không được để trống' })\n    level: string;\n\n    @IsNotEmpty({ message: 'description không được để trống' })\n    description: string;\n\n    @IsNotEmpty({ message: 'location không được để trống' })\n    location: string;\n\n    @IsNotEmpty({ message: 'startDate không được để trống' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'startDate có định dạng Date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: 'endDate không được để trống' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'endDate có định dạng Date' })\n    endDate: Date;\n\n    @IsNotEmpty({ message: 'isActive không được để trống' })\n    @IsBoolean({ message: 'isActive có định dạng boolean' })\n    isActive: boolean;\n\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMailDto.html":{"url":"classes/CreateMailDto.html","title":"class - CreateMailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/dto/create-mail.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMailDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'logo không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreatePermissionDto {\n    @IsNotEmpty({ message: 'Name không được để trống' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Address không được để trống' })\n    apiPath: string;\n\n    @IsNotEmpty({ message: 'Description không được để trống' })\n    method: string;\n\n    @IsNotEmpty({ message: 'logo không được để trống' })\n    module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'company is not empty'})@IsMongoId({message: 'company is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'email is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'job is not empty'})@IsMongoId({message: 'job is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'userId is not empty'})@IsMongoId({message: 'userId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty, isMongoId } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateResumeDto {\n    @IsNotEmpty({ message: 'email is not empty' })\n    email: string;\n\n    @IsNotEmpty({ message: 'userId is not empty' })\n    @IsMongoId({ message: 'userId is a mongo id' })\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'url is not empty' })\n    url: string;\n\n    @IsNotEmpty({ message: 'status is not empty' })\n    status: string;\n\n    @IsNotEmpty({ message: 'company is not empty' })\n    @IsMongoId({ message: 'company is a mongo id' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'job is not empty' })\n    @IsMongoId({ message: 'job is a mongo id' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n    @IsNotEmpty({ message: 'url is not empty' })\n    url: string;\n\n    @IsNotEmpty({ message: 'company is not empty' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'job is not empty' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean({message: 'isActive is boolean'})@IsNotEmpty({message: 'isActive is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray({message: 'permissions is array'})@IsNotEmpty({message: 'permissions is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateRoleDto {\n    @IsNotEmpty({ message: 'Name is not empty' })\n    name: string;\n\n    @IsNotEmpty({ message: 'description is not empty' })\n    description: string;\n\n    @IsBoolean({ message: 'isActive is boolean' })\n    @IsNotEmpty({ message: 'isActive is not empty' })\n    isActive: string;\n\n    @IsArray({ message: 'permissions is array' })\n    @IsNotEmpty({ message: 'permissions is not empty' })\n    permissions: mongoose.Schema.Types.ObjectId[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'description is not empty'})@IsNotEmpty({message: 'description is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray({message: 'permissions is array'})@IsNotEmpty({message: 'permissions is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CreateSubscriberDto {\n    @IsNotEmpty({ message: 'Name is not empty' })\n    name: string;\n\n    @IsEmail({}, { message: 'description is not empty' })\n    @IsNotEmpty({ message: 'description is not empty' })\n    email: string;\n\n    @IsArray({ message: 'permissions is array' })\n    @IsNotEmpty({ message: 'permissions is not empty' })\n    skills: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'company is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'job is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty, isMongoId } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateResumeDto {\n    @IsNotEmpty({ message: 'email is not empty' })\n    email: string;\n\n    @IsNotEmpty({ message: 'userId is not empty' })\n    @IsMongoId({ message: 'userId is a mongo id' })\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'url is not empty' })\n    url: string;\n\n    @IsNotEmpty({ message: 'status is not empty' })\n    status: string;\n\n    @IsNotEmpty({ message: 'company is not empty' })\n    @IsMongoId({ message: 'company is a mongo id' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'job is not empty' })\n    @IsMongoId({ message: 'job is a mongo id' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n    @IsNotEmpty({ message: 'url is not empty' })\n    url: string;\n\n    @IsNotEmpty({ message: 'company is not empty' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'job is not empty' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({}, {message: 'age phải là number'})@IsNotEmpty({message: 'age không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'gender không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'role không được để trống'})@IsMongoId({message: 'role có định dạng mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsNotIn, IsNumber, IsObject, IsString, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\n//create class to validate 1 object\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n\n}\n\nexport class CreateUserDto {\n    @IsNotEmpty({ message: 'name không được để trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được để trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống' })\n    password: string;\n\n    @IsNumber({}, { message: 'age phải là number' })\n    @IsNotEmpty({ message: 'age không được để trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'gender không được để trống' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'address không được để trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'role không được để trống' })\n    @IsMongoId({ message: 'role có định dạng mongo id' })\n    role: mongoose.Schema.Types.ObjectId;\n\n    //validate 1 object\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\n\nexport class RegisterUserDto {\n    @IsNotEmpty({ message: 'name không được để trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được để trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống' })\n    password: string;\n\n    @IsNotEmpty({ message: 'age không được để trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'gender không được để trống' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'address không được để trống' })\n    address: string;\n}\n\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'admin@dev.com', description: 'username' })\n    readonly username: string;\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        example: '123456',\n        description: 'password',\n    })\n    readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { Permission, PermissionSchema } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ])\n  ],\n\n})\nexport class DatabasesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Permission, PermissionDocument } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n    private readonly logger = new Logger(DatabasesService.name);\n\n    constructor(\n        @InjectModel(User.name)\n        private userModel: SoftDeleteModel,\n\n        @InjectModel(Permission.name)\n        private permissionModel: SoftDeleteModel,\n\n        @InjectModel(Role.name)\n        private roleModel: SoftDeleteModel,\n\n        private configService: ConfigService,\n        private userService: UsersService\n    ) { }\n\n\n    async onModuleInit() {\n        const isInit = this.configService.get(\"SHOULD_INIT\");\n        if (Boolean(isInit)) {\n\n            const countUser = await this.userModel.count({});\n            const countPermission = await this.permissionModel.count({});\n            const countRole = await this.roleModel.count({});\n\n            //create permissions\n            if (countPermission === 0) {\n                await this.permissionModel.insertMany(INIT_PERMISSIONS);\n                //bulk create\n            }\n\n            // create role//\n            if (countRole === 0) {\n                const permissions = await this.permissionModel.find({}).select(\"_id\");\n                await this.roleModel.insertMany([\n                    {\n                        name: ADMIN_ROLE,\n                        description: \"Admin thì full quyền :v\",\n                        isActive: true,\n                        permissions: permissions\n                    },\n                    {\n                        name: USER_ROLE,\n                        description: \"Người dùng/Ứng viên sử dụng hệ thống\",\n                        isActive: true,\n                        permissions: [] //không set quyền, chỉ cần add ROLE\n                    }\n                ]);\n            }\n\n            if (countUser === 0) {\n                const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n                const userRole = await this.roleModel.findOne({ name: USER_ROLE })\n                await this.userModel.insertMany([\n                    {\n                        name: \"I'm admin\",\n                        email: \"admin@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get(\"INIT_PASSWORD\")),\n                        age: 69,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: adminRole?._id\n                    },\n                    {\n                        name: \"I'm Hỏi Dân IT\",\n                        email: \"hoidanit@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get(\"INIT_PASSWORD\")),\n                        age: 96,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: adminRole?._id\n                    },\n                    {\n                        name: \"I'm normal user\",\n                        email: \"user@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get(\"INIT_PASSWORD\")),\n                        age: 69,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: userRole?._id\n                    },\n                ])\n            }\n\n            if (countUser > 0 && countRole > 0 && countPermission > 0) {\n                this.logger.log('>>> ALREADY INIT SAMPLE DATA...');\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadMultiFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@ResponseMessage('Upload single file')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { fileName: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        uploadMultiFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadMultiFile(files: Array)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('uploadMultiFile')@ResponseMessage('Upload multi file')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                            Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseInterceptors, UploadedFile, ParseFilePipeBuilder, HttpStatus, UploadedFiles } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor, FilesInterceptor } from '@nestjs/platform-express';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('files')\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) { }\n\n  @Public()\n  @Post('uploadMultiFile')\n  @ResponseMessage('Upload multi file')\n  @UseInterceptors(FilesInterceptor('files'))\n  uploadMultiFile(@UploadedFiles(\n    new ParseFilePipeBuilder()\n      .addFileTypeValidator({\n        fileType: /(image\\/jpeg|image\\/png|text\\/plain|application\\/pdf|application\\/msword|application\\/vnd.openxmlformats-officedocument.wordprocessingml.document)$/,\n      })\n      .addMaxSizeValidator({\n        maxSize: 100000 * 1024 //~100mb (maxSizeL byte)\n      })\n      .build({\n        errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY\n      }),\n  ) files: Array) {\n    console.log(files);\n  }\n\n  //@Public()\n  @Post('upload')\n  @ResponseMessage('Upload single file')\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  uploadFile(@UploadedFile(\n    new ParseFilePipeBuilder()\n      .addFileTypeValidator({\n        fileType: /(image\\/jpeg|image\\/png|text\\/plain|application\\/pdf|application\\/msword|application\\/vnd.openxmlformats-officedocument.wordprocessingml.document)$/,\n      })\n      .addMaxSizeValidator({\n        maxSize: 10000 * 1024 //~10mb (maxSizeL byte)\n      })\n      .build({\n        errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY\n      }),\n  ) file: Express.Multer.File) {\n    //console.log(file);\n    return {\n      fileName: file.filename\n    }\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n\n@Module({\n  controllers: [FilesController],\n  providers: [FilesService],\n  imports: [\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n    })\n  ],\n})\nexport class FilesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheck, HealthCheckService, MongooseHealthIndicator } from '@nestjs/terminus';\nimport { Public } from 'src/decorator/customize';\n\n@Controller('health')\nexport class HealthController {\n    constructor(\n        private health: HealthCheckService,\n        private db: MongooseHealthIndicator,\n    ) { }\n    @Get()\n    @Public()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.db.pingCheck('database'),\n        ]);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  controllers: [HealthController],\n  imports: [\n    TerminusModule,\n  ],\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/History.html":{"url":"classes/History.html","title":"class - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  History\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdatedBy\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport mongoose from 'mongoose';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History {\n    @IsNotEmpty()\n    status: string;\n\n    @IsNotEmpty()\n    updatedAt: Date;\n\n    @ValidateNested()\n    @IsNotEmpty()\n    @Type(() => UpdatedBy)\n    updatedBy: UpdatedBy;\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n    @IsNotEmpty({ message: 'History is not empty' })\n    @IsArray({ message: 'History is array' })\n    @ValidateNested()\n    @Type(() => History)\n    history: History[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n    _id: string;\n    name: string;\n    email: string;\n    role: {\n        _id: string;\n        name: string;\n    };\n    permissions?: {\n        _id: string;\n        name: string;\n        apiPath: string;\n        module: string;\n    }[]\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Job {\n    @Prop()\n    name: string;\n\n    @Prop()\n    skills: string[];\n\n    @Prop({ type: Object })\n    company: {\n        _id: mongoose.Schema.Types.ObjectId;\n        name: string;\n        logo: string\n    };\n\n    @Prop()\n    salary: number;\n\n    @Prop()\n    quantity: number;\n\n    @Prop()\n    level: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    location: string;\n\n    @Prop()\n    startDate: Date;\n    @Prop()\n    endDate: Date;\n\n    @Prop()\n    isActive: boolean;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch jobs with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Fetch job by id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) { }\n\n\n  @Post()\n  @ResponseMessage('Create a new job')\n  create(@Body() createJobDto: CreateJobDto, @User() user: IUser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Fetch jobs with pagination')\n  async findAll(@Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string) {\n    return await this.jobsService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Fetch job by id')\n  async findOne(@Param('id') id: string) {\n    return await this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a job')\n  async update(@Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @User() loginUser: IUser) {\n    return await this.jobsService.update(id, updateJobDto, loginUser);\n  }\n\n\n  @Delete(':id')\n  @ResponseMessage('Delete a job')\n  remove(@Param('id') id: string, @User() loginUser: IUser) {\n    return this.jobsService.remove(id, loginUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    {\n      name: Job.name,\n      schema: JobSchema\n    }\n  ])],\n  controllers: [JobsController],\n  providers: [JobsService],\n  //exports: [JobsService],\n})\nexport class JobsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateJobDto: UpdateJobDto, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Job, JobDocument } from './schemas/job.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class JobsService {\n\n  constructor(\n    @InjectModel(Job.name) // need to import Compay in companies.module.ts\n    private jobModel: SoftDeleteModel) { }\n\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    let newJob = await this.jobModel.create(\n      {\n        ...createJobDto,\n        createdBy: {\n          _id: user._id,\n          email: user.email\n        }\n      });\n    return {\n      _id: newJob._id,\n      createdAt: newJob?.createdAt\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n\n    const { filter, sort, population } = aqp(qs);\n\n    //params in query string (companies.controller,ts >> findAll )\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (currentPage - 1) * (limit);\n    let defaultLimit = limit ? limit : 10;\n    const totalItems = (await this.jobModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    let size = (totalItems - offset) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.guard.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.guard.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    ExecutionContext,\n    ForbiddenException,\n    Injectable,\n    UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorator/customize';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n    constructor(private reflector: Reflector) {\n        super();\n    }\n\n    canActivate(context: ExecutionContext) {\n        const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        if (isPublic) {\n            return true;\n        }\n        return super.canActivate(context);\n    }\n\n    handleRequest(err, user, info, context: ExecutionContext) {\n        const request: Request = context.switchToHttp().getRequest();\n        const isSkipPermission = this.reflector.getAllAndOverride(IS_PUBLIC_PERMISSION, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        // You can throw an exception based on either \"info\" or \"err\" arguments\n        if (err || !user) {\n            throw err || new UnauthorizedException('Token không hợp lệ');\n        }\n\n        //check permissions\n        const targetMethod = request.method;\n        const targetEndpoint = request.route?.path as string;\n\n        const permissions = user?.permissions ?? [];\n        let isExist = permissions.find(permission =>\n            targetMethod === permission.method\n            &&\n            targetEndpoint === permission.apiPath)\n        if (targetEndpoint.startsWith('/api/v1/auth')) isExist = true;\n        console.log('isExist', isExist)\n        if (!isExist && !isSkipPermission) {\n            throw new ForbiddenException('Bạn không có quyền truy cập')\n        }\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        private configService: ConfigService,\n        private roleService: RolesService,\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            //secretOrKey: 'JWT_ACCESS_TOKEN_SECRET'\n            secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        });\n    }\n\n    async validate(payload: IUser) { //validate: this is keyword of 'PassportStrategy' \n        const { _id, name, email, role } = payload;\n        //cần gán thêm permission vào req.user\n        const userRole = role as unknown as { _id: string; name: string };\n        const temp = (await this.roleService.findOne(userRole._id)).toObject();\n\n        //req.user = { _id, name, email, role, permissions} (user in 'local.strategy.ts')\n        return {\n            _id,\n            name,\n            email,\n            role,\n            permissions: temp?.permissions ?? []\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\n//local: this is key word of Guard\nexport class LocalAuthGuard extends AuthGuard('local') { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private authService: AuthService) {\n        super();\n    }\n    //validate: this is keyword of 'PassportStrategy' \n\n    async validate(username: string, password: string): Promise {\n        const user = await this.authService.validateUser(username, password);\n        if (!user) {\n            throw new UnauthorizedException(\"Invalid Username/Password !\");\n        }\n        return user; //req.user\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Mail.html":{"url":"classes/Mail.html","title":"class - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/schemas/mail.schema.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Mail {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleTestEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        handleTestEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTestEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Test email 6')@Cron('0 5 0 * * 0')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { CreateMailDto } from './dto/create-mail.dto';\nimport { UpdateMailDto } from './dto/update-mail.dto';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Subscriber, SubscriberDocument } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('mail')\n@Controller('mail')\nexport class MailController {\n  constructor(\n    private readonly mailService: MailService,\n    private readonly mailerService: MailerService,\n\n    @InjectModel(Subscriber.name)\n    private readonly subscriberModel: SoftDeleteModel,\n\n    @InjectModel(Job.name)\n    private readonly jobModel: SoftDeleteModel,\n  ) { }\n\n\n  // @Cron(CronExpression.EVERY_30_SECONDS)\n  // testCron() {\n  //   console.log('Called every 30 seconds');\n  // }\n\n  @Get()\n  @Public()\n  @ResponseMessage(\"Test email 6\")\n  @Cron(\"0 5 0 * * 0\") // 0h:5m:0s every sunday (sun:0 -> sat:6)\n  async handleTestEmail() {\n    const subscribers = await this.subscriberModel.find({});\n    for (const subs of subscribers) {\n      const subsSkills = subs.skills;\n      const jobWithMatchingskills = await this.jobModel.find({ skills: { $in: subsSkills } });\n      //todo\n      if (jobWithMatchingskills?.length) {\n        const jobs = jobWithMatchingskills.map(item => {\n          return {\n            name: item.name,\n            company: item.company,\n            salary: `${item.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + \" đ\",\n            skills: item.skills,\n          }\n        })\n        //build template\n        await this.mailerService.sendMail({\n          to: subs.email, //\"vulethuyoanh@gmail.com\",\n          from: '\"Support Team\" ', // override default from\n          subject: 'Welcome to Nice App! Confirm your Email',\n          //html: 'welcome bla bla', // HTML body content\n          template: \"new-job\",\n          context: {\n            receiver: subs.name,\n            jobs: jobs\n          }\n        });\n      }\n\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schema';\n\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n      { name: Job.name, schema: JobSchema },\n    ]),\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('EMAIL_HOST'),\n          secure: false,\n          auth: {\n            user: configService.get('EMAIL_AUTH_USER'),\n            pass: configService.get('EMAIL_AUTH_PASS'),\n          },\n        },\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n        preview: configService.get('EMAIL_PREVIEW') === 'true' ? true : false,\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [MailController],\n  providers: [MailService]\n})\nexport class MailModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createMailDto: CreateMailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMailDto\n                                            \n                                                            CreateMailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateMailDto: UpdateMailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMailDto\n                                            \n                                                            UpdateMailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateMailDto } from './dto/create-mail.dto';\nimport { UpdateMailDto } from './dto/update-mail.dto';\n\n@Injectable()\nexport class MailService {\n  create(createMailDto: CreateMailDto) {\n    return 'This action adds a new mail';\n  }\n\n  findAll() {\n    return `This action returns all mail`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} mail`;\n  }\n\n  update(id: number, updateMailDto: UpdateMailDto) {\n    return `This action updates a #${id} mail`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} mail`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MulterModuleOptions, MulterOptionsFactory } from \"@nestjs/platform-express\";\nimport fs from 'fs';\nimport { diskStorage } from \"multer\";\nimport path, { join } from \"path\";\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n\n    // createMulterOptions1(): MulterModuleOptions {\n    //     return {\n    //         dest: './upload', //auto gen folder upload at root (src) after run api /upload\n    //     };\n    // }\n\n    getRootPath = () => {\n        return process.cwd();\n    };\n    ensureExists(targetDirectory: string) {\n        fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n            if (!error) {\n                console.log('Directory successfully created, or it already exists.');\n                return;\n            }\n            switch (error.code) {\n                case 'EEXIST':\n                    // Error:\n                    // Requested location already exists, but it's not a directory.\n                    break;\n                case 'ENOTDIR':\n                    // Error:\n                    // The parent hierarchy contains a file with the same name as the dir\n                    // you're trying to create.\n                    break;\n                default:\n                    // Some other error like permission denied.\n                    console.error(error);\n                    break;\n            }\n        });\n    }\n\n    //auto gen folder save uploaded file at root (src) after run api /upload\n    createMulterOptions(): MulterModuleOptions {\n        return {\n            storage: diskStorage({\n                destination: (req, file, cb) => {\n                    const folder = req?.headers?.folder_type ?? \"default\";\n                    this.ensureExists(`public/images/${folder}`);\n                    cb(null, join(this.getRootPath(), `public/images/${folder}`))\n                },\n                filename: (req, file, cb) => {\n                    //get image extension\n                    let extName = path.extname(file.originalname);\n                    //get image's name (without extension)\n                    let baseName = path.basename(file.originalname, extName);\n                    let finalName = `${baseName}-${Date.now()}${extName}`\n                    cb(null, finalName)\n                }\n            })\n        };\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n    @Prop()\n    name: string;\n\n    @Prop()\n    apiPath: string;\n\n    @Prop()\n    method: string;\n\n    @Prop()\n    module: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch permissionS with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch permission by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update status permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) { }\n\n  @Post()\n  @ResponseMessage('Create a new permission')\n  create(@Body() createPermissionDto: CreatePermissionDto, @User() loginUser: IUser) {\n    return this.permissionsService.create(createPermissionDto, loginUser);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch permissionS with pagination')\n  findAll(@Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string) {\n    return this.permissionsService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch permission by id')\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update status permission')\n  update(@Param('id') id: string, @Body() updatePermissionDto: UpdatePermissionDto, @User() loginUser: IUser) {\n    return this.permissionsService.update(id, updatePermissionDto, loginUser);\n  }\n\n\n  @Delete(':id')\n  @ResponseMessage('Delete a permission')\n  remove(@Param('id') id: string, @User() loginUser: IUser) {\n    return this.permissionsService.remove(id, loginUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Permission, PermissionSchema } from './schemas/permission.schema';\n\n@Module({\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n  imports: [MongooseModule.forFeature([\n    {\n      name: Permission.name,\n      schema: PermissionSchema\n    }\n  ])],\n})\nexport class PermissionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updatePermissionDto: UpdatePermissionDto, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel) { }\n\n  async create(createPermissionDto: CreatePermissionDto, loginUser: IUser) {\n    const { name, apiPath, method, module } = createPermissionDto;\n    const { _id, email } = loginUser;\n\n    //check permission exist\n    const isExist = await this.permissionModel.findOne({ apiPath, method });\n    if (isExist) {\n      throw new BadRequestException(`Permission with apiPath ${apiPath}, method ${method} already exist`)\n    }\n\n    let newPermission = await this.permissionModel.create({\n      name, apiPath, method, module,\n      createdBy: { _id, email },\n    });\n    return {\n      _id: newPermission?._id,\n      createdAt: newPermission?.createdAt\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (currentPage - 1) * (limit);\n    let defaultLimit = limit ? limit : 10;\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    let size = (totalItems - offset) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'age không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'gender không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsNotIn, IsNumber, IsObject, IsString, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\n//create class to validate 1 object\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n\n}\n\nexport class CreateUserDto {\n    @IsNotEmpty({ message: 'name không được để trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được để trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống' })\n    password: string;\n\n    @IsNumber({}, { message: 'age phải là number' })\n    @IsNotEmpty({ message: 'age không được để trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'gender không được để trống' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'address không được để trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'role không được để trống' })\n    @IsMongoId({ message: 'role có định dạng mongo id' })\n    role: mongoose.Schema.Types.ObjectId;\n\n    //validate 1 object\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\n\nexport class RegisterUserDto {\n    @IsNotEmpty({ message: 'name không được để trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được để trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống' })\n    password: string;\n\n    @IsNotEmpty({ message: 'age không được để trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'gender không được để trống' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'address không được để trống' })\n    address: string;\n}\n\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'admin@dev.com', description: 'username' })\n    readonly username: string;\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        example: '123456',\n        description: 'password',\n    })\n    readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n    statusCode: number;\n    message?: string;\n    data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n    implements NestInterceptor> {\n    constructor(private reflector: Reflector) { }\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        return next\n            .handle()\n            .pipe(\n                map((data) => ({\n                    statusCode: context.switchToHttp().getResponse().statusCode,\n                    message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '',\n                    data: data\n                })),\n            );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n    @Prop({ required: true })\n    email: string;\n\n    @Prop({ required: true })\n    userId: mongoose.Schema.Types.ObjectId;;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    status: string;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name }) //or ref: \"Company\"\n    companyId: mongoose.Schema.Types.ObjectId; // can use this, không cần khai báo type ref\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })\n    jobId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({ type: mongoose.Schema.Types.Array })\n    history: {\n        status: string;\n        updatedAt: Date;\n        updatedBy: {\n            _id: mongoose.Schema.Types.ObjectId;\n            email: string;\n        }\n    }[];\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                getResumeByUser\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch resumes with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getResumeByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResumeByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('Get resumes by User')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, status: string, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update status resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) { }\n\n  @Post()\n  @ResponseMessage('Create a new resume')\n  create(@Body() createUserCvDto: CreateUserCvDto, @User() loginUser: IUser) {\n    return this.resumesService.create(createUserCvDto, loginUser);\n  }\n\n  @Post('by-user') //use Post để không bị trùng endpoint Get(':id')\n  @ResponseMessage('Get resumes by User')\n  getResumeByUser(@User() user: IUser) {\n    return this.resumesService.findByUser(user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch resumes with pagination')\n  async findAll(@Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string) {\n    return await this.resumesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch resume by id')\n  async findOne(@Param('id') id: string) {\n    return await this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update status resume')\n  updateStatus(@Param('id') id: string, @Body('status') status: string, @User() loginUser: IUser) {\n    return this.resumesService.updateStatus(id, status, loginUser);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a resume')\n  remove(@Param('id') id: string, @User() loginUser: IUser) {\n    return this.resumesService.remove(id, loginUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n  controllers: [ResumesController],\n  providers: [ResumesService],\n  imports: [MongooseModule.forFeature([\n    {\n      name: Resume.name,\n      schema: ResumeSchema\n    }\n  ])],\n})\nexport class ResumesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUser(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(_id: string, status: string, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name) // need to import Compay in companies.module.ts\n    private resumeModel: SoftDeleteModel) { }\n\n  async create(createUserCvDto: CreateUserCvDto, loginUser: IUser) {\n    const { _id, email } = loginUser;\n    let newCV = await this.resumeModel.create(\n      {\n        ...createUserCvDto,\n        email: email,\n        userId: _id,\n        status: 'PENDING',\n        createdBy: { _id, email },\n        history: [\n          {\n            status: 'PENDING',\n            updatedAt: new Date,\n            updatedBy: { _id, email }\n          }\n        ]\n\n      });\n    return {\n      _id: newCV?._id,\n      createdAt: newCV?.createdAt\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (currentPage - 1) * (limit);\n    let defaultLimit = limit ? limit : 10;\n    const totalItems = (await this.resumeModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    let size = (totalItems - offset)  sort theo [field] giảm dần\n      .populate([\n        {\n          path: 'companyId', select: { name: 1 }\n        },\n        {\n          path: 'jobId', select: { name: 1 }\n        },\n      ])\n  }\n\n  async updateStatus(_id: string, status: string, loginUser: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(`Resume not found`);\n    }\n    let updated = await this.resumeModel.updateOne({ _id },\n      {\n        status,\n        updatedBy: {\n          _id: loginUser._id,\n          email: loginUser.email\n        },\n        $push: { // đẩy thêm data vào old data\n          history: {\n            status,\n            updatedAt: new Date,\n            updatedBy: {\n              _id: loginUser._id,\n              email: loginUser.email\n            }\n          }\n        }\n      });\n\n    return updated;\n  }\n\n  async remove(_id: string, loginUser: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(`Resume not found`);\n    }\n    await this.resumeModel.updateOne({ _id },\n      {\n        deletedBy: {\n          _id: loginUser._id,\n          email: loginUser.email\n        }\n      }\n    )\n    return this.resumeModel.softDelete({ _id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n    @Prop({ unique: true }) //unique\n    name: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    isActive: boolean;\n\n    //[mongoose.Schema.Types.ObjectId]: this is array object\n    @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n    permissions: Permission[];\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch role with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch role by id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) { }\n\n  @Post()\n  @ResponseMessage('Create a new role')\n  create(@Body() createRoleDto: CreateRoleDto, @User() loginUser: IUser) {\n    return this.rolesService.create(createRoleDto, loginUser);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch role with pagination')\n  findAll(@Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string) {\n    return this.rolesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch role by id')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update role')\n  update(@Param('id') id: string, @Body() updateRoleDto: UpdateRoleDto, @User() loginUser: IUser) {\n    return this.rolesService.update(id, updateRoleDto, loginUser);\n  }\n\n\n  @Delete(':id')\n  @ResponseMessage('Delete a role')\n  remove(@Param('id') id: string, @User() loginUser: IUser) {\n    return this.rolesService.remove(id, loginUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\n\n@Module({\n  controllers: [RolesController],\n  providers: [RolesService],\n  imports: [MongooseModule.forFeature([\n    {\n      name: Role.name,\n      schema: RoleSchema\n    }\n  ])],\n  exports: [RolesService]\n})\nexport class RolesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateRoleDto: UpdateRoleDto, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { BadRequestException, Injectable } from '@nestjs/common';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { Role, RoleDocument } from './schemas/role.schema';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel) { }\n\n  async create(createRoleDto: CreateRoleDto, loginUser: IUser) {\n    const { name, description, isActive, permissions } = createRoleDto;\n\n    //check role exist\n    const isExist = await this.roleModel.findOne({ name });\n    if (isExist) {\n      throw new BadRequestException(`Role with name is ${name} already exist`)\n    }\n\n    let newRole = await this.roleModel.create({\n      name, description, isActive, permissions,\n      createdBy: { _id: loginUser._id, email: loginUser.email },\n\n    });\n    return {\n      _id: newRole?._id,\n      createdAt: newRole?.createdAt\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (currentPage - 1) * (limit);\n    let defaultLimit = limit ? limit : 10;\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    let size = (totalItems - offset) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type SubscriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n    @Prop({ unique: true }) //unique\n    name: string;\n\n    @Prop()\n    email: string;\n\n    @Prop()\n    skills: string[];\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkills\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch subscriberS with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch subscriber by id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skill')@SkipCheckPermission()@ResponseMessage('Get subscriber's skills')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@SkipCheckPermission()@ResponseMessage('Update subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { ResponseMessage, SkipCheckPermission, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('subscribers')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) { }\n\n  @Post()\n  @ResponseMessage('Create a new subscriber')\n  create(@Body() createSubscriberDto: CreateSubscriberDto, @User() loginUser: IUser) {\n    return this.subscribersService.create(createSubscriberDto, loginUser);\n  }\n\n\n  @Post('skill')\n  @SkipCheckPermission()\n  @ResponseMessage(\"Get subscriber's skills\")\n  getUserSkills(@User() user: IUser) {\n    return this.subscribersService.getUserSkills(user);\n  }\n\n\n  @Get()\n  @ResponseMessage('Fetch subscriberS with pagination')\n  findAll(@Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string) {\n    return this.subscribersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch subscriber by id')\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @Patch()\n  @SkipCheckPermission()\n  @ResponseMessage('Update subscriber')\n  update(@Body() updateSubscriberDto: UpdateSubscriberDto, @User() loginUser: IUser) {\n    return this.subscribersService.update(updateSubscriberDto, loginUser);\n  }\n\n\n  @Delete(':id')\n  @ResponseMessage('Delete a subscriber')\n  remove(@Param('id') id: string, @User() loginUser: IUser) {\n    return this.subscribersService.remove(id, loginUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from './schemas/subscriber.schema';\n\n@Module({\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n  imports: [MongooseModule.forFeature([\n    {\n      name: Subscriber.name,\n      schema: SubscriberSchema\n    }\n  ])],\n})\nexport class SubscribersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getUserSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(SubscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        SubscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport { Subscriber, SubscriberDocument } from './schemas/subscriber.schema';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name)\n    private SubscriberModel: SoftDeleteModel) { }\n\n  async create(createSubscriberDto: CreateSubscriberDto, loginUser: IUser) {\n    const { name, email, skills } = createSubscriberDto;\n\n    //check Subscriber exist\n    const isExist = await this.SubscriberModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(`Subscriber with name is ${email} already exist`)\n    }\n\n    let newSubscriber = await this.SubscriberModel.create({\n      name, email, skills,\n      createdBy: { _id: loginUser._id, email: loginUser.email },\n\n    });\n    return {\n      _id: newSubscriber?._id,\n      createdAt: newSubscriber?.createdAt\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (currentPage - 1) * (limit);\n    let defaultLimit = limit ? limit : 10;\n    const totalItems = (await this.SubscriberModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    let size = (totalItems - offset) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n    statusCode: number;\n    message?: string;\n    data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n    implements NestInterceptor> {\n    constructor(private reflector: Reflector) { }\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        return next\n            .handle()\n            .pipe(\n                map((data) => ({\n                    statusCode: context.switchToHttp().getResponse().statusCode,\n                    message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '',\n                    data: data\n                })),\n            );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMailDto.html":{"url":"classes/UpdateMailDto.html","title":"class - UpdateMailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/dto/update-mail.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateMailDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateMailDto } from './create-mail.dto';\n\nexport class UpdateMailDto extends PartialType(CreateMailDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                history\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         History[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'History is not empty'})@IsArray({message: 'History is array'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport mongoose from 'mongoose';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History {\n    @IsNotEmpty()\n    status: string;\n\n    @IsNotEmpty()\n    updatedAt: Date;\n\n    @ValidateNested()\n    @IsNotEmpty()\n    @Type(() => UpdatedBy)\n    updatedBy: UpdatedBy;\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n    @IsNotEmpty({ message: 'History is not empty' })\n    @IsArray({ message: 'History is array' })\n    @ValidateNested()\n    @Type(() => History)\n    history: History[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(CreateUserDto, ['password'] as const)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '_id không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/mapped-types';\n//PartialType: kế thừa create-user.dto.ts\n//OmitType: kế thừa và loại đi thuộc tính nào đó\nimport { CreateUserDto } from './create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\n\n\nexport class UpdateUserDto extends OmitType(CreateUserDto, ['password'] as const) {\n    @IsNotEmpty({ message: '_id không được để trống' })\n    _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedBy.html":{"url":"classes/UpdatedBy.html","title":"class - UpdatedBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport mongoose from 'mongoose';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History {\n    @IsNotEmpty()\n    status: string;\n\n    @IsNotEmpty()\n    updatedAt: Date;\n\n    @ValidateNested()\n    @IsNotEmpty()\n    @Type(() => UpdatedBy)\n    updatedBy: UpdatedBy;\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n    @IsNotEmpty({ message: 'History is not empty' })\n    @IsArray({ message: 'History is array' })\n    @ValidateNested()\n    @Type(() => History)\n    history: History[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n    @Prop()\n    name: string;\n\n    @Prop({ required: true })\n    email: string;\n\n    @Prop({ required: true })\n    password: string;\n\n    @Prop()\n    age: number;\n\n    @Prop()\n    gender: string;\n\n    @Prop()\n    address: string;\n\n    @Prop({ type: Object })\n    company: {\n        _id: mongoose.Schema.Types.ObjectId;\n        name: string;\n    };\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @Prop()\n    refreshToken: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '123456', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'admin@dev.com', description: 'username'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsNotIn, IsNumber, IsObject, IsString, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\n//create class to validate 1 object\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n\n}\n\nexport class CreateUserDto {\n    @IsNotEmpty({ message: 'name không được để trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được để trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống' })\n    password: string;\n\n    @IsNumber({}, { message: 'age phải là number' })\n    @IsNotEmpty({ message: 'age không được để trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'gender không được để trống' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'address không được để trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'role không được để trống' })\n    @IsMongoId({ message: 'role có định dạng mongo id' })\n    role: mongoose.Schema.Types.ObjectId;\n\n    //validate 1 object\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\n\nexport class RegisterUserDto {\n    @IsNotEmpty({ message: 'name không được để trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được để trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống' })\n    password: string;\n\n    @IsNotEmpty({ message: 'age không được để trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'gender không được để trống' })\n    gender: string;\n\n    @IsNotEmpty({ message: 'address không được để trống' })\n    address: string;\n}\n\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'admin@dev.com', description: 'username' })\n    readonly username: string;\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        example: '123456',\n        description: 'password',\n    })\n    readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new user')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch user with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch user by id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a user')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, loginUser: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('Update a user')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, Query }\n  from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from './users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n//@: decorator\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) { }\n\n  @Post()\n  @ResponseMessage('Create a new user')\n  async create(@Body() createUserDto: CreateUserDto, @User() loginUser: IUser) { //@User: ''decorator >> customize.ts\n    let newUser = await this.usersService.create(createUserDto, loginUser);\n    return {\n      _id: newUser._id,\n      createdAt: newUser.createdAt\n    };\n  }\n\n\n\n  @Get()\n  @ResponseMessage('Fetch user with paginate')\n  async findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string) {\n    return await this.usersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Public() // to don't use JWT\n  @Get(':id')\n  @ResponseMessage('Fetch user by id')\n  async findOne(@Param('id') id: string) { //@Param: req.params.id\n    return await this.usersService.findOne(id);\n\n  }\n\n  @Patch()\n  @ResponseMessage('Update a user')\n  async update(@Body() updateUserDto: UpdateUserDto, @User() loginUser: IUser) {\n    return await this.usersService.update(updateUserDto, loginUser);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a user')\n  remove(@Param('id') id: string, @User() loginUser: IUser) {\n    return this.usersService.remove(id, loginUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    { name: User.name, schema: UserSchema }, //name: this is id of module\n    { name: Role.name, schema: RoleSchema }\n  ])],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserToken\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hashPass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashPass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUser: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUser\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:153\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, loginUser: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginUser\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:184\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:177\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User as UserM, UserDocument } from './schemas/user.schema';\nimport mongoose from 'mongoose';\nimport { compareSync, genSaltSync, hashSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from './users.interface';\nimport { User } from 'src/decorator/customize';\nimport aqp from 'api-query-params';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { USER_ROLE } from 'src/databases/sample';\n\n@Injectable() // ~ Pipe (midleware): https://docs.nestjs.com/pipes\nexport class UsersService {\n  constructor(\n    @InjectModel(UserM.name) //name: id of model\n    private userModel: SoftDeleteModel,\n\n    @InjectModel(Role.name) //name: id of model\n    private roleModel: SoftDeleteModel\n\n  ) { }\n\n  getHashPassword = (password: string) => {\n    const salt = genSaltSync(10);\n    const hashPass = hashSync(password, salt);\n    return hashPass;\n  }\n\n  async register(registerUser: RegisterUserDto) {\n    const { name, email, password, age, gender, address } = registerUser;\n    //check email is exist\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(`Email ${email} is exist.`);\n    }\n\n    //fetch user role\n    const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n\n    const hashPassword = this.getHashPassword(password);\n    let user = await this.userModel.create({\n      name,\n      email,\n      password: hashPassword,\n      age,\n      gender,\n      address,\n      role: userRole?._id\n    })\n    return user;\n  }\n\n\n  async create(createUserDto: CreateUserDto, @User() loginUser: IUser) {\n    const { name, email, password, age, gender, address, role, company } = createUserDto;\n    //check email is exist\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(`Email ${email} is exist.`);\n    }\n    const hashPassword = this.getHashPassword(password);\n    let newUser = await this.userModel.create({\n      name,\n      email,\n      password: hashPassword,\n      age,\n      gender,\n      address,\n      role,\n      company,\n      createdBy: {\n        _id: loginUser._id,\n        email: loginUser.email\n      }\n\n    })\n    return newUser;\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (currentPage - 1) * (limit);\n    let defaultLimit = limit ? limit : 10;\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    let size = (totalItems - offset)  {\n    return await this.userModel.updateOne(\n      { _id },\n      { refreshToken }\n    )\n  }\n\n  findUserToken = async (refreshToken: string) => {\n    return await this.userModel.findOne({ refreshToken })\n      .populate({ path: 'role', select: { name: 1 } })\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            SkipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/dto/create-mail.dto.ts\n            \n            class\n            CreateMailDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/dto/update-mail.dto.ts\n            \n            class\n            UpdateMailDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/mail/schemas/mail.schema.ts\n            \n            class\n            Mail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            History\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdatedBy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 1.8.1\n        \n            @nestjs/cli : 9.4.0\n        \n            @nestjs/common : 9.4.0\n        \n            @nestjs/config : 2.3.1\n        \n            @nestjs/core : 9.4.0\n        \n            @nestjs/jwt : 10.2.0\n        \n            @nestjs/mapped-types : 1.2.2\n        \n            @nestjs/mongoose : 9.2.2\n        \n            @nestjs/passport : 10.0.3\n        \n            @nestjs/platform-express : 9.4.0\n        \n            @nestjs/schedule : 3.0.1\n        \n            @nestjs/swagger : 7.0.4\n        \n            @nestjs/terminus : 10.2.3\n        \n            @nestjs/throttler : ^4.1.0\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : 2.4.3\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            cors : ^2.8.5\n        \n            ejs : 3.1.9\n        \n            handlebars : 4.7.7\n        \n            helmet : ^7.1.0\n        \n            mongoose : 7.6.1\n        \n            ms : 2.1.3\n        \n            nodemailer : ^6.9.3\n        \n            passport : 0.7.0\n        \n            passport-jwt : 4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.2.0\n        \n            soft-delete-plugin-mongoose : 1.0.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nauthor: ovu\nSteps:\n\nCài đặt thư viện với câu lệnh: npm i\nChạy dự án với câu lệnh: npm run dev\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_exports\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nCompaniesService \n\nCompaniesService \n\nCompaniesService  -->\n\nCompaniesModule->CompaniesService \n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    34 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : job website project\n        \n            License : UNLICENSED\n        \n            Author : ovu\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SkipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"SUPER_ADMIN\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        \"_id\": \"648ab415f4328bd3153ee211\",\n        \"name\": \"Get Company with paginate\",\n        \"apiPath\": \"/api/v1/companies\",\n        \"method\": \"GET\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:47:49.369Z\",\n        \"updatedAt\": \"2023-06-15T06:54:05.131Z\",\n        \"__v\": 0,\n        \"updatedBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        }\n    },\n    {\n        \"_id\": \"648ab436f4328bd3153ee216\",\n        \"name\": \"Create Company\",\n        \"apiPath\": \"/api/v1/companies\",\n        \"method\": \"POST\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:48:22.224Z\",\n        \"updatedAt\": \"2023-06-15T06:48:22.224Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab4d5f4328bd3153ee21b\",\n        \"name\": \"Update Company\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:51:01.241Z\",\n        \"updatedAt\": \"2023-06-15T06:51:01.241Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab4ebf4328bd3153ee220\",\n        \"name\": \"Delete Company\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:51:23.973Z\",\n        \"updatedAt\": \"2023-06-15T06:51:23.973Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab5a8072f2a2ef910638d\",\n        \"name\": \"Get Company by id\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"GET\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:54:32.799Z\",\n        \"updatedAt\": \"2023-06-15T06:54:32.799Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6d3fa16b294212e4033\",\n        \"name\": \"Create User\",\n        \"apiPath\": \"/api/v1/users\",\n        \"method\": \"POST\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:59:31.898Z\",\n        \"updatedAt\": \"2023-06-15T06:59:31.898Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6e7fa16b294212e4038\",\n        \"name\": \"Get User by Id\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"GET\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T06:59:51.041Z\",\n        \"updatedAt\": \"2023-06-15T06:59:51.041Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6fdfa16b294212e403d\",\n        \"name\": \"Get User with paginate\",\n        \"apiPath\": \"/api/v1/users\",\n        \"method\": \"GET\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:00:13.364Z\",\n        \"updatedAt\": \"2023-06-15T07:00:13.364Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab719fa16b294212e4042\",\n        \"name\": \"Update User\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:00:41.934Z\",\n        \"updatedAt\": \"2023-06-15T07:00:41.934Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab728fa16b294212e4047\",\n        \"name\": \"Delete User\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:00:56.274Z\",\n        \"updatedAt\": \"2023-06-15T07:00:56.274Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab750fa16b294212e404c\",\n        \"name\": \"Upload Single File\",\n        \"apiPath\": \"/api/v1/files/upload\",\n        \"method\": \"POST\",\n        \"module\": \"FILES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T07:01:36.923Z\",\n        \"updatedAt\": \"2023-06-15T07:01:36.923Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad488dafdb9754f40b846\",\n        \"name\": \"Create a Job\",\n        \"apiPath\": \"/api/v1/jobs\",\n        \"method\": \"POST\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:06:16.508Z\",\n        \"updatedAt\": \"2023-06-15T09:06:16.508Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad499dafdb9754f40b84b\",\n        \"name\": \"Get a job by id\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"GET\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:06:33.697Z\",\n        \"updatedAt\": \"2023-06-15T09:06:33.697Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4a6dafdb9754f40b850\",\n        \"name\": \"Update a Job\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:06:46.085Z\",\n        \"updatedAt\": \"2023-06-15T09:06:46.085Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4ccdafdb9754f40b859\",\n        \"name\": \"Get Job with paginate\",\n        \"apiPath\": \"/api/v1/jobs\",\n        \"method\": \"GET\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:07:24.175Z\",\n        \"updatedAt\": \"2023-06-15T09:07:24.175Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4d9dafdb9754f40b85e\",\n        \"name\": \"Delete a Job\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:07:37.896Z\",\n        \"updatedAt\": \"2023-06-15T09:07:37.896Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4fedafdb9754f40b863\",\n        \"name\": \"Create a Resume\",\n        \"apiPath\": \"/api/v1/resumes\",\n        \"method\": \"POST\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:08:14.659Z\",\n        \"updatedAt\": \"2023-06-15T09:08:14.659Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad511dafdb9754f40b868\",\n        \"name\": \"Fetch resume with paginate\",\n        \"apiPath\": \"/api/v1/resumes\",\n        \"method\": \"GET\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:08:33.395Z\",\n        \"updatedAt\": \"2023-06-15T09:08:33.395Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad522dafdb9754f40b86d\",\n        \"name\": \"Get resume by id\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"GET\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:08:50.801Z\",\n        \"updatedAt\": \"2023-06-15T09:08:50.801Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad53bdafdb9754f40b872\",\n        \"name\": \"Delete a resume\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:09:15.785Z\",\n        \"updatedAt\": \"2023-06-15T09:09:15.785Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad555dafdb9754f40b877\",\n        \"name\": \"Update resume status\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:09:41.694Z\",\n        \"updatedAt\": \"2023-06-15T09:09:41.694Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad56ddafdb9754f40b87c\",\n        \"name\": \"Fetch resumes by user\",\n        \"apiPath\": \"/api/v1/resumes/by-user\",\n        \"method\": \"POST\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:10:05.961Z\",\n        \"updatedAt\": \"2023-06-15T09:10:05.961Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad59adafdb9754f40b881\",\n        \"name\": \"Create a permission\",\n        \"apiPath\": \"/api/v1/permissions\",\n        \"method\": \"POST\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:10:50.946Z\",\n        \"updatedAt\": \"2023-06-15T09:10:50.946Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5aedafdb9754f40b886\",\n        \"name\": \"Fetch Permission with paginate\",\n        \"apiPath\": \"/api/v1/permissions\",\n        \"method\": \"GET\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:11:10.914Z\",\n        \"updatedAt\": \"2023-06-15T09:11:10.914Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5c5dafdb9754f40b88b\",\n        \"name\": \"Fetch permission by id\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"GET\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:11:33.234Z\",\n        \"updatedAt\": \"2023-06-15T09:11:33.234Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5d4dafdb9754f40b890\",\n        \"name\": \"Update a permission\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:11:48.081Z\",\n        \"updatedAt\": \"2023-06-15T09:11:48.081Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5ebdafdb9754f40b895\",\n        \"name\": \"Delete a permission\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:12:11.323Z\",\n        \"updatedAt\": \"2023-06-15T09:12:11.323Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad613dafdb9754f40b89a\",\n        \"name\": \"Create Role\",\n        \"apiPath\": \"/api/v1/roles\",\n        \"method\": \"POST\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:12:51.974Z\",\n        \"updatedAt\": \"2023-06-15T09:12:51.974Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad622dafdb9754f40b89f\",\n        \"name\": \"Fetch roles with paginate\",\n        \"apiPath\": \"/api/v1/roles\",\n        \"method\": \"GET\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:06.618Z\",\n        \"updatedAt\": \"2023-06-15T09:13:06.618Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad630dafdb9754f40b8a6\",\n        \"name\": \"Fetch role by id\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"GET\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:20.853Z\",\n        \"updatedAt\": \"2023-06-15T09:13:20.853Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad640dafdb9754f40b8ab\",\n        \"name\": \"Update Role\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:36.836Z\",\n        \"updatedAt\": \"2023-06-15T09:13:36.836Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad650dafdb9754f40b8b0\",\n        \"name\": \"Delete a Role\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"hoidanit@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-06-15T09:13:52.798Z\",\n        \"updatedAt\": \"2023-06-15T09:13:52.798Z\",\n        \"__v\": 0\n    }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"NORMAL_USER\"\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n    SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: unknown, ctx: ExecutionContext) => {\n        const request = ctx.switchToHttp().getRequest();\n        return request.user;\n    },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
